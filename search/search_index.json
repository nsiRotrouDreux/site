{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Accueil","text":"<p>Bienvenue sur ce site o\u00f9 vous pouvez retrouver les cours de premi\u00e8re et terminale NSI , mais aussi quelques activit\u00e9s de SNT, des exlications sur l'IA , des liens g\u00e9n\u00e9raux sur l'informatique ou encore pourquoi \u00e9tudier l'informatique .</p> <p> Menu</p> <p>Terminale NSI</p> <p>Premi\u00e8re NSI</p> <p>SNT</p> <p>I.A.</p> <p>Pourquoi faire de l'informatique ? </p> <p>Liens</p>"},{"location":"IA/","title":"Bienvenue dans le monde fantastique de l'Intelligence Artificielle","text":""},{"location":"IA/#introduction","title":"Introduction","text":"<p>L'intelligence artificielle : Omnipr\u00e9sente, affolante, d\u00e9rioutante, fascinante. Mais surtout intrigante et obscure , tellement obscure. On entend tout et son contraire \u00e0 son sujet. De la r\u00e9volution finale \u00e0 la fin de l'emploi, de l'espoir d'une vie plus longue \u00e0 \"l'idiotisation\" de la soci\u00e9t\u00e9.</p> <p>On va essayer ici non pas de r\u00e9pondre \u00e0 toutes ces interrogations mais d'esquisser un d\u00e9but de compr\u00e9hension de cette fameuse IA.</p>"},{"location":"IA/#le-programme","title":"Le programme","text":"<ul> <li>Introduction : Petite histoire et premiers probl\u00e8mes</li> <li>Apprentissage par renforcement : Le jeu de Nim</li> <li> <p>Q learning</p> <ul> <li>Apprentissage supervis\u00e9 : le KNN</li> <li>I A g\u00e9n\u00e9rative : LLM et Token</li> <li>Classification d'images </li> <li>Ethique, \u00e9cologie...</li> </ul> </li> </ul>"},{"location":"IA/QLearning/","title":"Pr\u00e9sentation du Q\u2011Learning","text":""},{"location":"IA/QLearning/#introduction","title":"Introduction","text":"<p>Q\u2011Learning est un algorithme d'apprentissage par renforcement, sans mod\u00e8le (model\u2011free) et hors\u2011politique (off\u2011policy), qui apprend une fonction de valeur d'action Q(s, a) pour maximiser la r\u00e9compense cumul\u00e9e. On va ici, \u00e0 travers un exemple, construire la table qui permet \u00e0 l'algorithme de converger .</p>"},{"location":"IA/QLearning/#fonctionnement-et-mise-a-jour","title":"Fonctionnement et mise \u00e0 jour","text":"<ul> <li> <p>L'id\u00e9e est de mettre \u00e0 jour une table qui va permettre de trouver le meilleur chemin pour arriver \u00e0 la r\u00e9compense . Cette table est mise \u00e0 jour \u00e0 l'aide d'une formule math\u00e9matique que l'on verra plus loin.  A chaque \u00e9tape , l'agent choisi une action. Suite \u00e0 cette action , on met \u00e0 jour la valeur qui est associ\u00e9e au choix de l'agent. La nouvelle valeur d\u00e9pend:</p> </li> <li> <p>Du coefficient choisi (\u03b1)</p> </li> <li>De la valeur de la case d'o\u00f9 l'agent arrive Q</li> <li>De la valeur associ\u00e9e \u00e0 la case d'arriv\u00e9e R</li> <li>De la valeur maximale de la case d'arrriv\u00e9e  max(Q)</li> </ul> <p>formule : Q = Q*(1-\u03b1) + \u03b1(R+(1-\u03b1)max(Q))</p> <p>Exemple :</p>"},{"location":"IA/QLearning/#mise-a-jour-regle-de-bellman-iteree","title":"Mise \u00e0 jour (r\u00e8gle de Bellman it\u00e9r\u00e9e)","text":"<p><code>Q(s,a) \u2190 Q(s,a) + \u03b1 * (r + \u03b3 * max_a' Q(s',a') - Q(s,a))</code> avec \u03b1 = taux d'apprentissage, \u03b3 = facteur d'actualisation.</p>"},{"location":"IA/QLearning/#pseudocode-essentiel","title":"Pseudo\u2011code (essentiel)","text":"<pre><code>Initialize Q(s,a) arbitrairement\npour chaque \u00e9pisode:\n    initialiser s\n    tant que s non terminal:\n        choisir a depuis s (\u03b5\u2011greedy sur Q)\n        ex\u00e9cuter a, observer r, s'\n        Q(s,a) \u2190 Q(s,a) + \u03b1*(r + \u03b3*max_a'Q(s',a') - Q(s,a))\n        s \u2190 s'\n</code></pre>"},{"location":"IA/QLearning/#particularites-dans-lapprentissage-par-renforcement","title":"Particularit\u00e9s dans l'apprentissage par renforcement","text":"<ul> <li>Off\u2011policy : apprend la valeur de la politique optimale ind\u00e9pendamment de la politique suivie pour explorer.</li> <li>Model\u2011free : pas besoin de conna\u00eetre ou d'estimer la dynamique P(s'|s,a).</li> <li>Bootstrapping : mise \u00e0 jour bas\u00e9e sur estimations courantes \u2192 converge sous conditions (taux d'apprentissage d\u00e9croissant, visite fr\u00e9quente de tous les couples (s,a)).</li> <li>Sensible \u00e0 l'exploration : mauvaise exploration \u2192 mauvaise estimation des Q.</li> <li>Fonction d'approximation : pour grands espaces d'\u00e9tat/action, utiliser r\u00e9seaux (DQN) modifie stabilit\u00e9 et exige techniques suppl\u00e9mentaires (replay buffer, target network).</li> <li>Efficacit\u00e9 \u00e9chantillonnale g\u00e9n\u00e9ralement moindre que m\u00e9thodes bas\u00e9es sur mod\u00e8les.</li> </ul>"},{"location":"IA/QLearning/#hyperparametres-cles","title":"Hyperparam\u00e8tres cl\u00e9s","text":"<ul> <li>\u03b1 (learning rate), \u03b3 (discount), \u03b5 (exploration), politique d'exploration et son d\u00e9croissement, nombre d'\u00e9pisodes/\u00e9tapes, taille du buffer et batch (si apprentissage par lot).</li> </ul>"},{"location":"IA/QLearning/#avantages-limites-rapides","title":"Avantages / Limites rapides","text":"<ul> <li>Avantages : simple, convergent (pour tableaux finis), off\u2011policy.</li> <li>Limites : ne scale pas bien sans approximation, instable avec r\u00e9seaux, n\u00e9cessite beaucoup d'\u00e9chantillons.</li> </ul>"},{"location":"IA/QLearning/#extensions-courantes","title":"Extensions courantes","text":"<ul> <li>Deep Q\u2011Network (DQN), Double DQN, Dueling DQN, Prioritized Experience Replay, Q\u2011learning adaptatif.</li> </ul>"},{"location":"IA/QLearning/#references","title":"R\u00e9f\u00e9rences","text":"<ul> <li>Sutton &amp; Barto, \"Reinforcement Learning: An Introduction\" (chapitre sur Q\u2011learning).</li> <li>Articles sur DQN et ses variantes pour fonction d'approximation.</li> </ul>"},{"location":"IA/iaRenforcement/","title":"Apprentissage par renforcement","text":""},{"location":"IA/iaRenforcement/#definition-de-lapprentissage-par-renforcement","title":"D\u00e9finition de l'apprentissage par renforcement","text":"<p>L\u2019apprentissage par renforcement ((Reinforcement Learning, RL)) est une technique utilis\u00e9e en intelligence artificielle, o\u00f9 un agent (par exemple, un robot ou un logiciel) apprend \u00e0 prendre les meilleures d\u00e9cisions en interagissant avec son environnement. \u00c0 chaque action qu\u2019il effectue, il re\u00e7oit une r\u00e9compense (positive ou n\u00e9gative), et au fil du temps, il tente de maximiser la somme de ces r\u00e9compenses. On parle souvent de m\u00e9thode essai-erreur, car l\u2019agent exp\u00e9rimente diff\u00e9rentes strat\u00e9gies, corrige ses erreurs et am\u00e9liore ses choix progressivement.</p> <p>L'agent n'est pas explicitement programm\u00e9 pour accomplir une t\u00e2che, mais il d\u00e9couvre par essais et erreurs quelles actions m\u00e8nent aux meilleurs r\u00e9sultats.</p>"},{"location":"IA/iaRenforcement/#exemples-simples-de-fonctionnement","title":"Exemples simples de fonctionnement","text":"<p>Labyrinthe</p> <p>Supposons un robot qui doit traverser une pi\u00e8ce remplie d\u2019obstacles pour atteindre une sortie. \u00c0 chaque mouvement, il peut recevoir :</p> <p>+10 s\u2019il se rapproche de la sortie</p> <p>-5 s\u2019il heurte un obstacle</p> <p>Au d\u00e9but, le robot agit un peu au hasard. \u00c0 force d\u2019essais, il apprend \u00e0 \u00e9viter les obstacles et \u00e0 trouver le chemin le plus rapide vers la sortie, car les r\u00e9compenses lui indiquent ce qui est b\u00e9n\u00e9fique ou non. Et vive les tondeuses qui tondent toutes seules !</p> <p>Robot ramasseur d'objets</p> <p>Un robot doit ramasser des objets dans une pi\u00e8ce :  - +5 points pour chaque objet ramass\u00e9,  - -2 points s'il heurte un obstacle.</p> <p>Le robot apprend \u00e0 naviguer efficacement pour maximiser les objets collect\u00e9s.</p> <p>L'apprentissage par renforcement est utilis\u00e9 dans de nombreux domaines comme les jeux vid\u00e9o, la robotique, et l'optimisation de processus.</p>"},{"location":"IA/iaRenforcement/#deep-blue-et-alphazero-pour-comprendre-la-difference-de-fonctionnement","title":"Deep Blue et AlphaZero pour comprendre la diff\u00e9rence de fonctionnement","text":""},{"location":"IA/iaRenforcement/#deep-blue","title":"Deep Blue","text":"<p>Deep Blue est le nom de la machine qui fit sensation en 1997, battant le champion du monde G. Kasparov aux \u00e9checs. Pour autant, cette machine n'a pas \u00e9t\u00e9 form\u00e9e avec du renforcement mais pr\u00e9format\u00e9e par des humains .</p> <p>Son approche reposait principalement sur des techniques de calcul intensif\u202f: il \u00e9valuait des millions de positions \u00e0 chaque coup gr\u00e2ce \u00e0 des algorithmes de recherche (Minimax) et une vaste base de donn\u00e9es de parties d\u2019\u00e9checs humaines. En informatique  on parle de Force Brute . Deep Blue n\u2019apprenait donc pas par essai-erreur en recevant des \u00ab r\u00e9compenses \u00bb comme c\u2019est le cas pour l\u2019apprentissage par renforcement. </p>"},{"location":"IA/iaRenforcement/#alphazero","title":"AlphaZero","text":"<p>AlphaZero est une intelligence artificielle con\u00e7ue par DeepMind (Google) qui s\u2019est illustr\u00e9e en ma\u00eetrisant \u00e0 un niveau surhumain les jeux d\u2019\u00e9checs, de go et de shogi. Contrairement aux anciennes nmachines qui jouaient aux \u00e9checs  (comme  Deep Blue), AlphaZero n\u2019utilise pas une base de donn\u00e9es de parties humaines\u202f: il ne conna\u00eet que les r\u00e8gles du jeu et apprend tout seul, \u00ab \u00e0 partir de z\u00e9ro\" : On a ici un exemple d'utilisation de l'apprentissage par renforcement.</p>"},{"location":"IA/iaRenforcement/#le-jeu-du-nim","title":"Le jeu du Nim","text":"<p>Activit\u00e9 capytale</p>"},{"location":"IA/iaRenforcement/#le-processus-en-detail","title":"Le processus en d\u00e9tail","text":"<p>Le processus d'apprentissage en d\u00e9tail</p> <p>Explorer le jeu de Nim avec 8 b\u00e2tonnets par apprentissage</p> <p>Prenons l\u2019exemple du jeu de Nim avec 8 b\u00e2tonnets pos\u00e9s sur la table. Deux joueurs (ici : la \"machine\" et un humain) jouent \u00e0 tour de r\u00f4le. \u00c0 chaque tour, on peut retirer 1 ou 2 b\u00e2tonnets. Celui qui prend le dernier b\u00e2tonnet gagne.</p> <p>Imaginons que l\u2019on veuille entra\u00eener une machine avec apprentissage par renforcement \u00e0 bien jouer.</p> <ol> <li> <p>\u00c9tats possibles  Chaque \"\u00e9tat\" correspond au nombre de b\u00e2tonnets restants (8 \u00e0 0).</p> </li> <li> <p>Actions possibles \u00e0 chaque \u00e9tat</p> <p>Retirer 1 b\u00e2tonnet</p> <p>Retirer 2 b\u00e2tonnets</p> </li> <li> <p>D\u00e9part</p> <p>La machine commence. </p> <p>Par exemple, il y a 8 b\u00e2tonnets :</p> <p>Si elle prend 1, il en reste 7.</p> <p>Si elle prend 2, il en reste 6.</p> </li> <li> <p>R\u00e9compense        +1 si la machine gagne (prend le dernier b\u00e2tonnet)</p> <p>-1 si la machine perd</p> <p>0 autrement</p> </li> <li> <p>Processus d\u2019apprentissage</p> <p>Au d\u00e9but, la machine choisit ses coups au hasard.</p> <p>\u00c0 chaque partie, elle m\u00e9morise quelle action, dans quel \u00e9tat, lui a valu une victoire (ou une d\u00e9faite).</p> <p>Au fil du temps, elle favorise les choix qui l\u2019ont amen\u00e9e \u00e0 gagner et \u00e9vite ceux qui l\u2019ont fait perdre. C\u2019est comme ajuster les \"poids\" du r\u00e9seau : elle attribue des scores plus \u00e9lev\u00e9s aux actions qui marchent !</p> </li> </ol> <p>Exemple chiffr\u00e9 (simplifi\u00e9)   Imaginons :</p> <p>La machine joue et il reste 8 b\u00e2tonnets.</p> <p>Dans sa m\u00e9moire, elle a not\u00e9 :</p> <p>En enlevant 1 b\u00e2tonnet \u00e0 8, elle a gagn\u00e9 2 fois / perdu 3 fois (score = -1)</p> <p>En enlevant 2 b\u00e2tonnets \u00e0 8, elle a gagn\u00e9 5 fois / perdu 1 fois (score = +4)</p> <p>Lorsqu\u2019elle retrouve l\u2019\u00e9tat \"8 b\u00e2tonnets\", elle va choisir l\u2019action qui a le meilleur score : enlever 2 b\u00e2tonnets.</p> <p>Apr\u00e8s de nombreuses parties et ajustements, elle adopte la meilleure strat\u00e9gie (toujours favoriser les actions les plus r\u00e9compens\u00e9es). C\u2019est exactement ainsi que l\u2019apprentissage par renforcement fonctionne dans ce contexte : par l\u2019exp\u00e9rience, la machine \"tire le\u00e7on de ses erreurs\" et affine ses choix pour gagner de plus en plus souvent.</p>"},{"location":"IA/introIa/","title":"Introduction \u00e0 l'Intelligence Artificielle","text":""},{"location":"IA/introIa/#petit-historique","title":"Petit historique","text":"<p>Une histoire d l'IA...en abr\u00e9g\u00e9</p> <p>Ecoutez cet audio</p> <p>Une IA pour  vos questions historiques</p> <p> Une I.A. sp\u00e9cialis\u00e9e dans l'histoire de l'IA. nolej</p>"},{"location":"IA/introIa/#a-toi-de-jouer","title":"A toi de jouer !","text":"<p>Bon, on va voir si tu es capable de situer correctement dans le temps quelques \u00e9volutions scientifiques et toutes les dates marquantes de l'IA </p> <p>Timeline</p> <p>Jouez </p> <p>correction</p>"},{"location":"IA/introIa/#les-problemes-de-lia-et-la-valeur-des-videos-regardees","title":"Les probl\u00e8mes de l'IA ...et la valeur des videos regard\u00e9es","text":"<p>Les biais</p> <p>video 1</p> <p>La fiabilit\u00e9</p> <p>video 2</p> <p>video 3</p> <p>L IA et l'\u00e9cole</p> <p>video4</p>"},{"location":"IA/introIa/#intelligence-artificielle-ou-pas","title":"Intelligence artificielle ...ou pas ?","text":"<p>On met un peu l'intelligence artificielle \u00e0 toutes les sauces . Alors, on va voir si vous avez une bonne vision des domaines o\u00f9 elle intervient !</p>"},{"location":"IA/introIa/#un-petit-plus","title":"Un petit plus","text":"<p>On a travaill\u00e9 sur l'histoire de l'IA. Mais pourquoi ne pas lui demander ce qu'elle en pense ?</p> <p>Info</p> <p>L'histoire de l'IA par Mistral</p> <p>Info</p> <p>L'hsitoire de l'IA par ChatGpt</p> <p>Info</p> <p>L'hsitoire de l'IA par Perplexity</p>"},{"location":"Liens/Liens/","title":"Liens","text":""},{"location":"Premiere%20NSI/","title":"Accueil","text":""},{"location":"Premiere%20NSI/#chapitres","title":"Chapitres","text":"<ul> <li>Repr\u00e9sentation des nombres</li> <li>Bool\u00e9ens</li> <li>Donn\u00e9es en table</li> <li>Int\u00e9raction Homme Machine</li> <li>Architecture mat\u00e9rielle</li> <li>R\u00e9seaux </li> <li> <p>Bases de programmation</p> <ul> <li>Les boucles</li> <li>Les listes</li> <li>Les fonctions</li> <li>Les dictionnaires</li> <li>Les fichiers</li> </ul> </li> <li> <p>Chaines de carac\u00e8res</p> </li> <li>Algorithme gloutons</li> <li>k plus proches voisins</li> <li>Space Invaders</li> <li>Le slicing</li> </ul>"},{"location":"Premiere%20NSI/binaire/","title":"Binaire","text":"<p>Le binaire</p>"},{"location":"Premiere%20NSI/binaire/#ecriture-dun-entier-en-base-2-ou-en-binaire","title":"Ecriture d'un entier en base 2 (ou en binaire)","text":""},{"location":"Premiere%20NSI/binaire/#le-systeme-decimal","title":"Le syst\u00e8me d\u00e9cimal","text":"<p>Il s\u2019appuie sur 10 symboles :0,1,2,3,4,5,6,7,8,9 Prenons par exemple le nombre 678. En fait, ce nombre a \u00e9t\u00e9 construit de la mani\u00e8re suivante : 678= 610\u00b2+710+8  6 est le chiffre de rang 2 (ou centaine), 7 celui de rang 1 (ou dizaine) et 8 celui de rang 0 ou unit\u00e9s. Tous les nombres \u00e9crits dans le syst\u00e8me d\u00e9cimal sont d\u00e9composables \u00e0 l\u2019aide des puissances de 10. Lorsque le rang des unit\u00e9s est plein (\u00e0 9), on augmente le rang suivant d\u2019une unit\u00e9 et on r\u00e9initialise \u00e0 0 le rang qui \u00e9tait plein. Si le rang suivant est lui aussi plein , on r\u00e9initialise \u00e0 0 les deux rangs et on ajoute 1 au rang suivant, etc\u2026</p>"},{"location":"Premiere%20NSI/binaire/#le-systeme-binaire","title":"Le syst\u00e8me binaire","text":"<p>Le syst\u00e8me binaire s\u2019appuie sur deux symboles, le 0 et le 1 , mais fonctionne exactement comme le syst\u00e8me d\u00e9cimal . D\u00e8s qu\u2019un rang est plein, on augmente de 1 celui d\u2019apr\u00e8s et on r\u00e9initialise \u00e0 0. Voici la construction de l\u2019\u00e9criture des premiers entiers en binaire.</p> d\u00e9cimal binaire 0 0 1 1 2 10 3 11 4 100 5 101 6 110 7 111 8 1000 9 1001 10 1010"},{"location":"Premiere%20NSI/binaire/#passage-du-systeme-decimal-au-binaire-et-reciproquement","title":"Passage du syst\u00e8me d\u00e9cimal au binaire et r\u00e9ciproquement","text":"<p>Du d\u00e9cimal au  binaire</p> <p>Il existe une m\u00e9thode tr\u00e8s simple pour passer du d\u00e9cimal au binaire. Cette m\u00e9thode est fond\u00e9e sur l\u2019algorithme d\u2019\u2019Euclide et les restes successifs de la division euclidienne par 2 de l\u2019entier que l\u2019on veut convertir. On obtient une succession de reste (0 ou 1) . Il suffit de les \u00e9crire du dernier obtenu , qui doit \u00eatre 1, au premier.  Exemple : Convertissons 104 en binaire </p> 104 Reste de la division par 2 104=2*52 0 52=2*26 0 26=2*13 0 13= 6*2+1 1 6=3*2 0 3=2*1+1 1 1=2*0+1 1 <p>L'\u00e9criture binaire de 104 s'obtient en \u00e9crivant les restes obtenus du dernier au permier soit ici 1101000</p> <pre><code>&gt; Un nombre pair se finira toujours par un 1 en binaire\n</code></pre>"},{"location":"Premiere%20NSI/binaire/#le-binaire-sur-un-octet","title":"Le binaire sur un octet","text":"<ul> <li>L'unit\u00e9 de base en informatqiue est le bit , qui prend donc la valeur 0 ou 1</li> <li>Un octet est compos\u00e9 de 8 bits .</li> <li>Le plus petit nombre que l'on peut \u00e9crire sur un octet est 0 et le plus grand 255, qui correspond \u00e0 11111111</li> <li>La notation internationale pour l'octet est o. On parlera alors de ko (kilooctet), Mo (Megaoctet);Go(Gigaoctet)...</li> </ul> <p>L'astuce pour \u00e9crire rapidement un nombre en binaire</p> <p>L'astuce repose sur la connaissance des puissances de 2 , jusqu'\u00e0 \\(2^{7}\\)</p> <p></p> <p>source: siloged.fr</p> <p>Il suffit donc de voir si les diff\u00e9rentes puissances de 2 \"rentre\" dans le nombre que l'on veut \u00e9crire . Si c'est le cas , on soustrait la;puissance de 2 au nombre \u00e0 decimal et on reccomence avec la puissance inf\u00e9rieure .</p> <p>Du binaire au d\u00e9cimal </p> <p>Il peut \u00eatre utile de savoir que la somme des deux plus grandes puissances,128+64, vaut 192. Ainsi tout nombre entre 192 et 255 aura ses deux bits les plus \u00e0 gauche (on dit aussi de poids le plus forts ) \u00e9gaux \u00e0 1 en \u00e9criture binaire.</p> <p>Le passage est plus facile . Il suffit d'additionner les puissances de 2 dont le bit correspondant en bianire est 1.</p> <p>Exemple</p> <p>01011010 : 0x128+1x64+0x32+1x16+1x8+0x4+1x2+0x1 =90</p> <p>Easy  </p>"},{"location":"Premiere%20NSI/binaire/#ecriture-dun-entier-en-base-16","title":"Ecriture d'un entier en base 16","text":"<p>Pour pouvoir \u00e9crire en base 16, il faut 16 symboles : les chiffres du syst\u00e8me d\u00e9cimal plus les lettres A,B,C,D ,E,F (qui correspondent respectivement aux valeurs 10,11,12,13,14 et 15) . De la m\u00eame fa\u00e7on que pour les deux bases vues pr\u00e9c\u00e9demment, un nombre \u00e9crit en hexad\u00e9cimal se d\u00e9compose \u00e0 l\u2019aide des puissances de 16 et donc le passage de la base 16 \u00e0 10 est simple . Ainsi  A8= 10*16+8=18410 o\u00f9 AB est un nombre \u00e9crit en base 16.</p> <p>De m\u00eame pour obtenir un nombre en hexad\u00e9cimal \u00e0 partir d\u2019un nombre en d\u00e9cimal, on utilise la m\u00e9thode des divisions successives par 16. Il suffit alors de r\u00e9\u00e9crire les restes obtenus en commen\u00e7ant par le dernier jusqu\u2019au premier.</p> <p>Le truc en plus</p> <p>En fait, il existe une m\u00e9thode bien plus simple pour \u00e9crire un nombre en base 16.  * On \u00e9crit notre nombre en base 2   * On groupe les bits 4 par 4 : Les 4 de gauche et les 4 de droite . On tra,scrit chaque groupe en hexad\u00e9cimal...et c'est gagn\u00e9 </p> <p>Example</p> <ul> <li>165 s'\u00e9crit 10100101 en binaire </li> <li>On a deux groupes : 1010 soit A en hexa d\u00e9cimal (10 en d\u00e9cimal) et 0101 soit 5</li> <li>L'\u00e9criture hexad\u00e9cimale de 165 est A5 en hexadecimal</li> </ul>"},{"location":"Premiere%20NSI/binaire/#exercice","title":"Exercice","text":"<p>Remplir les cases vides </p> binaire d\u00e9cimal hexad\u00e9cimal 01101001 11 109 F4 CD correction binaire d\u00e9cimal hexad\u00e9cimal 01101001 105 69 11 3 3 01101101 109 6D 11110100 244 F4 11001101 205 CD"},{"location":"Premiere%20NSI/binaire/#representation-dun-entier-relatif-en-binaire","title":"Repr\u00e9sentation d'un entier relatif en binaire","text":"<ul> <li>Sur un octet, le bit de poids le plus fort va servir \u00e0 coder le signe de  l'entier : 0 pour les positifs et 1 pour les n\u00e9gatifs. </li> <li>On ne peut plus donc coder que les entiers entre -128 et 127 sur un octet</li> </ul> <p>La technique utilis\u00e9e est appel\u00e9e compl\u00e9ment \u00e0 2</p> <p>Le truc en plus</p> <p>La technique pour coder un entier relatif:</p> <ul> <li>On code la valeur absolue du nombre (exemple 68 si on veut coder -68)</li> <li>On transforme les 0 en 1 et les 1 en 0</li> <li>On ajoute 1</li> </ul> <p>La technique ultime : </p> <ul> <li>On code la valeur absolue du nombre (exemple 98 si on veut coder -68)</li> <li>On part de la droite et on cahnge les les valeurs du bit uniquement apr\u00e8s le premier 1</li> </ul> <p>Exemple</p> <p>codons -113 :</p> <ul> <li>Etape 1 : 113, c'est 01110101 en binaire</li> <li>Etape 2, on ne touche pas au premier 1 \u00e0 droite, mais on change tous les autres bits : On obtient 10001001 pour le codage de -113</li> </ul> <p>V\u00e9rification : Additionnons les valeurs binaires de 113 et -113 </p> <pre><code>     01110101             \n    +10001011\n     ---------\n = 1 00000000   . On obtient bien 0 sur 1 octet.\n</code></pre>"},{"location":"Premiere%20NSI/binaire/#exercice_1","title":"Exercice","text":"<p>Ecrire les entiers relatifs suivants en binaire avec la m\u00e9thode du compl\u00e9ment \u00e0 2 :    -121,  -8 , -128, -65.</p> <p>Quel est le plus petit nombre quel l'on peut \u00e9crire \u00e0 votre avis sur 9 bits , 2 octets ?</p> correction <p>121  donne 01111001 donc -121 s'\u00e9crit 10000111</p> <p>8 s'\u00e9crit 00001000 donc  =8 s'\u00e9crit 11111000</p> <p>128 s'\u00e9crit 1000000 donc -128 s'\u00e9crit ....10000000</p> <p>65 s'ecrit 01000001 donc -64 s'\u00e9crit 10111111</p> <p>Sur 9 bits on peut aller jusqu'\u00e0  - \\(2^{9}\\) et donc sur  2 octets , soit 16 bits , jusqu'\u00e0 -\\(2^{16}\\)</p>"},{"location":"Premiere%20NSI/binaire/#representation-dun-reel-en-base-2","title":"Repr\u00e9sentation d'un r\u00e9el en base 2","text":"<p>C'est le moment de bien \u00e9couter, c'est un peu plus dur </p> <p> Ecriture d'un nombre flottant en base 2</p> <p>En base 10 , le nombre 61,154 est sous forme d\u00e9compos\u00e9e 6x\\(10^{1}\\)+1x\\(10^{0}\\)+1x\\(10^{-1}\\)+5x\\(10^{-2}\\)+4xx\\(10^{-3\\) De m\u00eame, en base deux   1101,101 signifie 1x\\(2^{3}\\)+1x\\(2^{2}\\)+0x\\(2^{1}\\)+1x\\(2^{0}\\)+1x\\(2^{-1}\\)+0x\\(2^{-2}\\)+1x\\(2^{-3}\\)=11,625  Il est plus difficile de passer de la base 10 \u00e0 la base 2. Exemple : Ecrire 61,154 en base 2. Nous n\u2019avons aucun probl\u00e8me \u00e0 \u00e9crire 61 en base deux : 111101  Comment exprimer 0,154 en base 2 ?</p> <pre><code> 0,154 *2 =0.308    0\n 0.308*2=0.616  0\n 0.616*2=1.232  1\n 0.232*2=0.464  0\n 0.464*2=0.928  0\n 0.928*2=1.856  1\n 0.856*2=1.712  1\n 0.712*2=1.424  1\n 0.424*2=0.848  0  etc\u2026.\n</code></pre> <p>On obtient donc 61,154 =111101,00100111\u2026. en base 2  .</p>"},{"location":"Premiere%20NSI/binaire/#exercices","title":"Exercices","text":"<p>1) Trouver la repr\u00e9sentation d\u00e9cimale de 1101101,011</p> <p>2) Trouver la repr\u00e9sentation binaire  de 24,625</p> correction <ol> <li> <p>La partie enti\u00e8re est 109 et on doit ajouter \\(2^{-2}\\) +\\(2^{-3}\\) soit 0.375 , donc au total 109,375</p> </li> <li> <p>24 s'\u00e9crit 11000 et 0.625 = 0.5+0.125 soit \\(2^{-1}\\) +\\(2^{-3}\\) doonc 24,625 s\u00e9crit 11000,101</p> </li> </ol> <p>Remarques importantes : En base 10, 61,154 = 6,154x\\(10^{1}\\) et 0.0061154= 6.154x\\(10^{-3}\\)</p> <p>Il en va de m\u00eame en base 2 : 1101,1101= 1,1011101*\\(2^{3}\\), l\u2019exposant 3 correspondant \u00e0 un d\u00e9calage de 3 vers la droite de la virgule.</p> <p>De m\u00eame 0.0011=1,1x\\(2^{-3}\\), l\u2019exposant -3 correspondant \u00e0 un d\u00e9calage de 3 vers la gauche.   Un nombre d\u00e9cimal \"fini\" ne l'est pas forc\u00e9ment en binaire.</p>"},{"location":"Premiere%20NSI/binaire/#representation-en-machine-dun-nombre-flottant","title":"Repr\u00e9sentation en machine d\u2019un nombre flottant","text":"<p>Les machines utilisent une norme pour coder les nombres r\u00e9els : La Norme IEEE 754. Pour cela , le nombre devra pr\u00e9alablement \u00eatre \u00e9crit sous la forme 1,XXXXX.2e(avec e l'exposant)</p> <p>La technique </p> <p>\u2022 Le nombre est cod\u00e9 sur 32 bits</p> <p>\u2022 Le bit de poids le plus fort sert \u00e0 coder le signe (0 pour positif, 1 pour n\u00e9gatif)</p> <p>\u2022 L\u2019exposant est cod\u00e9 sur les 8 bits cons\u00e9cutifs au signe.</p> <p>\u2022 La mantisse est cod\u00e9e sur les 23 bits restants et correspondant aux bits situ\u00e9s apr\u00e8s la virgule.</p> <p>La principale difficult\u00e9 vient du codage de l\u2019exposant : En effet, il nous faut pouvoir coder les exposants n\u00e9gatifs. Nous avons 8 bits et pouvons alors coder th\u00e9oriquement 256 valeurs. Deux valeurs \u00e9tant r\u00e9serv\u00e9es, il nous reste 254 valeurs, que l\u2019on fait varier de -126 \u00e0 127. Pour que l\u2019exposant soit toujours positif, on ajoute 127 \u00e0 la valeur de l\u2019exposant.</p> <p></p> <p>Exemple</p> <p>Donnons le code en machine de 124,75</p> <p>Il nous faut d'abord \u00e9crire ce nombre en binaire : 1111100,11, je vous laisse v\u00e9rifier maintenant que vous \u00eates balaises. </p> <p>On \u00e9crit le nombre sous la forme adapt\u00e9e :1,11110011x\\(2^{6}\\)</p> <p>bit 31 : C'est 0 puisque le nombre est positif</p> <p>8 bits de l'exposant : c'est donc 127+6 soit 133 : 10000101</p> <p>La mantisse : 11110011</p> <p>On obtient donc 0 10000101 111100110...............0 (32 bits au total)</p> <p> Et donc l'autre sens ?????</p> <p>Allons y avec 0 10000001 01101   (on n'\u00e9crit pas les 0 finaux)</p> <p>Le signe est positif . L'exposant vaut 10000001 soit 129: +2  La mantisse : 01101 </p> <p>L'ecriture est donc 1,01101 x\\(2^{2}\\)  NE PAS OUBLIER LE 1 AVANT LA VIRGULE</p> <p>Finalement on a 101,101 soit 5,625</p>"},{"location":"Premiere%20NSI/binaire/#exercice_2","title":"Exercice","text":"<ol> <li>Donner la repr\u00e9sentation en machine de 177,5</li> <li>Quel est repr\u00e9sent\u00e9 en machine par 1 10000010 111101 ?</li> </ol> correction <ol> <li>177: 10110001 et 0.5: 0.1  soit 10110001,1 ou avec la norme utilis\u00e9e 1,01100011**\\(2^{7}\\)</li> </ol> <p>L'exposant \u00e0 coder est 134, on obtient : 1 10000110 011000110....0  </p> <ol> <li>C'est un nombre n\u00e9gatif, l'exposant vaut 130 donc +3 </li> </ol> <p>On a donc 1,111101 x\\(2^{3}\\) soit 1111,101 ou 15,625</p>"},{"location":"Premiere%20NSI/booleens/","title":"Les Bool\u00e9ens","text":"<p>En informatique, une valeur bool\u00e9enne est une valeur qui peut prendre deux \u00e9tats , souvent repr\u00e9sent\u00e9s par Vrai ou Faux.</p> <p>On symbolise souvent ces deux \u00e9tats pour les valeur 1, Vrai  et 0, Faux.</p> <p>En informatique , les bool\u00e9ens sont souvent utiliser dans des tests conditionnels  <pre><code> nombre = int (input(\"ntrez un nombre :\" ))\n if nombre &gt; 10:  # nombre &gt; 10 peut prendre deux valeurs : True ou False \n    print ....\n</code></pre></p>"},{"location":"Premiere%20NSI/booleens/#les-operateurs-booleens","title":"Les op\u00e9rateurs bool\u00e9ens","text":"<p>On va \u00e9tablir les tables des principaux op\u00e9rateurs bool\u00e9ens : AND, OR, XOR, MOT</p> <p>AND</p> A B A AND B 0 0 0 0 1 0 1 0 0 1 1 1 <p>AND est vrai si les deux conditions sont vraies.</p> <p>OR</p> A B A OR B 0 0 0 0 1 1 1 0 1 1 1 1 <p>OR est vrai si au moins une des deux  conditions est vraie.</p> <p>XOR</p> A B A XOR B 0 0 0 0 1 1 1 0 1 1 1 0 <p>XOR est vrai si exctement une condition est vraie.</p> <p>NOT</p> A NOT A 0 1 0 1 1 0 1 0 <p>NOT transforme un vrai en faux et inversement</p> <p>Remarque : OR correspond au ou dans la phrase, j'irai en ville s'il y a un bus ou une voiture er XOR au ou dans la phrase j'irai \u00e0 la plage ou \u00e0 la montagne</p>"},{"location":"Premiere%20NSI/booleens/#addition-et-booleen","title":"Addition et bool\u00e9en","text":"<p>On peut \u00e9tablir une table o\u00f9 \u00e0 partir de la valeur des bits, on peut d\u00e9terminer la somme et la retenue obtenues.</p> <p>addition et bool\u00e9en</p> A B RETENUE SOMME 0 0 0 0 0 1 0 1 1 0 0 1 1 1 1 0 <p>La retenue correspond \u00e0 l'op\u00e9rateur AND et la somme au XOR         </p>"},{"location":"Premiere%20NSI/booleens/#python-et-les-booleens","title":"Python et les bool\u00e9ens","text":"<p>Les mots cl\u00e9s utilis\u00e9s en python sont tout \u00e0 fait naturel </p> Langage naturel Python Vrai True Faux False Et AND Ou OR Ou exclusif XOR"},{"location":"Premiere%20NSI/booleens/#exercices","title":"Exercices","text":"<p>Lien capytale</p>"},{"location":"Premiere%20NSI/chaines/","title":"Les cha\u00eenes de caract\u00e8res en Python (Premi\u00e8re NSI)","text":""},{"location":"Premiere%20NSI/chaines/#1-definition","title":"1. D\u00e9finition","text":"<p>Une cha\u00eene de caract\u00e8res (ou string) est une suite de caract\u00e8res entour\u00e9e de guillemets simples <code>'...'</code> ou doubles <code>\"...\"</code>.</p> <pre><code>texte = \"Bonjour\"\nmot = 'Python'\n</code></pre>"},{"location":"Premiere%20NSI/chaines/#2-operations-de-base","title":"2. Op\u00e9rations de base","text":""},{"location":"Premiere%20NSI/chaines/#a-acces-aux-caracteres","title":"a. Acc\u00e8s aux caract\u00e8res","text":"<p>On peut acc\u00e9der \u00e0 chaque caract\u00e8re d'une cha\u00eene gr\u00e2ce \u00e0 son indice (le premier caract\u00e8re a l'indice 0).</p> <pre><code>texte = \"Python\"\nprint(texte[0])  # P\nprint(texte[2])  # t\n</code></pre>"},{"location":"Premiere%20NSI/chaines/#b-parcourir-une-chaine","title":"b. Parcourir une cha\u00eene","text":"<p><pre><code>for lettre in texte:\n    print(lettre)\n</code></pre> Autre fa\u00e7on de parcourir une chaine de caract\u00e8res, si jamais on avaoit besoin de l'indice : <pre><code>for i in range(len(mot)):\n    print(mot[i])\n</code></pre></p> <p>remarque len(mot ) nous donne la longueur du mot, mais le dernier indice      &gt; s'arr\u00eate un rang avant...puisque l'on commence de 0</p>"},{"location":"Premiere%20NSI/chaines/#c-longueur-dune-chaine","title":"c. Longueur d'une cha\u00eene","text":"<pre><code>len(texte)  # 6\n</code></pre>"},{"location":"Premiere%20NSI/chaines/#d-concatenation","title":"d. Concat\u00e9nation","text":"<p>On peut assembler des cha\u00eenes avec <code>+</code> :</p> <pre><code>prenom = \"Alice\"\nnom = \"Dupont\"\nnom_complet = prenom + \" \" + nom  # \"Alice Dupont\"\n</code></pre>"},{"location":"Premiere%20NSI/chaines/#e-repetition","title":"e. R\u00e9p\u00e9tition","text":"<pre><code>print(\"ha\" * 3)  # \"hahaha\"\n</code></pre>"},{"location":"Premiere%20NSI/chaines/#3-quelques-methodes-utiles","title":"3. Quelques m\u00e9thodes utiles","text":"<ul> <li><code>lower()</code> : met en minuscules</li> <li><code>upper()</code> : met en majuscules</li> <li><code>replace(a, b)</code> : remplace <code>a</code> par <code>b</code></li> <li><code>find(s)</code> : cherche la sous-cha\u00eene <code>s</code></li> </ul> <pre><code>s = \"Bonjour\"\nprint(s.lower())      # \"bonjour\"\nprint(s.upper())      # \"BONJOUR\"\nprint(s.replace(\"o\", \"a\"))  # \"Banjaur\"\nprint(s.find(\"jour\")) # 3\n</code></pre>"},{"location":"Premiere%20NSI/chaines/#4-slices-tranches","title":"4. Slices (tranches)","text":"<p>Permet d'extraire une partie de la cha\u00eene :</p> <pre><code>texte = \"Premiere NSI\"\nprint(texte[0:8])  # \"Premiere\"\nprint(texte[9:])   # \"NSI\"\n</code></pre>"},{"location":"Premiere%20NSI/chaines/#5-immutabilite","title":"5. Immutabilit\u00e9","text":"<p>Les cha\u00eenes sont immutables : on ne peut pas modifier un caract\u00e8re directement.</p> <pre><code>texte = \"Python\"\n# texte[0] = \"J\"  # Erreur !\n</code></pre>"},{"location":"Premiere%20NSI/chaines/#6-exemples-dexercices","title":"6. Exemples d'exercices","text":"<ol> <li>Afficher chaque lettre d'un mot sur une ligne diff\u00e9rente.</li> <li>Compter le nombre de voyelles dans une cha\u00eene.</li> <li>Demander un mot \u00e0 l'utilisateur et afficher s'il contient la lettre \"e\".</li> </ol>"},{"location":"Premiere%20NSI/slicing/","title":"Slicing","text":"<p>Le slicing est une op\u00e9ration qui permet d'extraire une sous-partie d'une s\u00e9quence (cha\u00eene, liste, tuple, etc.) en Python.</p>"},{"location":"Premiere%20NSI/slicing/#syntaxe","title":"Syntaxe","text":"<p><pre><code>s\u00e9quence[start:stop:step]\n</code></pre> - <code>start</code> : index de d\u00e9but inclus (par d\u00e9faut 0). - <code>stop</code>  : index de fin exclus (par d\u00e9faut len(s\u00e9quence)). - <code>step</code>  : pas entre \u00e9l\u00e9ments (par d\u00e9faut 1). Peut \u00eatre n\u00e9gatif.</p>"},{"location":"Premiere%20NSI/slicing/#exemples-simples","title":"Exemples simples","text":"<pre><code>s = \"abcdef\"\ns[1:4]     # 'bcd'    (indices 1,2,3)\ns[:3]      # 'abc'    (d\u00e9but \u2192 3)\ns[3:]      # 'def'    (3 \u2192 fin)\ns[::2]     # 'ace'    (tous les 2)\ns[::-1]    # 'fedcba' (inverse la s\u00e9quence)\n</code></pre> <p>Avec une liste : <pre><code>L = [0,1,2,3,4,5]\nL[2:5]     # [2,3,4]\nL[-3:]     # [3,4,5]  (trois derniers \u00e9l\u00e9ments)\nL[:-2]     # [0,1,2,3]\nL[::3]     # [0,3]    (\u00e9l\u00e9ments d'indice 0,3,...)\n</code></pre></p>"},{"location":"Premiere%20NSI/slicing/#indices-negatifs","title":"Indices n\u00e9gatifs","text":"<p>Un indice n\u00e9gatif compte depuis la fin : <code>-1</code> est le dernier \u00e9l\u00e9ment. Exemple : <pre><code>s[-4:-1]   # \u00e9quivaut \u00e0 s[len(s)-4:len(s)-1]\n</code></pre></p>"},{"location":"Premiere%20NSI/slicing/#cas-particuliers-utiles","title":"Cas particuliers utiles","text":"<ul> <li>Copier une s\u00e9quence : <code>copie = seq[:]</code></li> <li>Prendre les n premiers : <code>seq[:n]</code></li> <li>Prendre les n derniers : <code>seq[-n:]</code></li> <li>Inverser : <code>seq[::-1]</code></li> </ul>"},{"location":"Premiere%20NSI/slicing/#remarques","title":"Remarques","text":"<ul> <li>Le slice retourne une nouvelle s\u00e9quence </li> <li>Si <code>start</code> &gt;= <code>stop</code> et <code>step</code> positif \u2192 slice vide.</li> </ul>"},{"location":"Premiere%20NSI/Projet/spaceInvader/","title":"Projets","text":""},{"location":"Premiere%20NSI/Projet/spaceInvader/#space-invaders","title":"SPACE INVADERS","text":"<p> apqrn5</p> <p>Tu es pr\u00eat \u00e0 coder ton premier jeu ? </p> <p>Un truc bien vintage , avec juste quelques couleurs, et un module de python qui va te faciliter la tache , Pyxel.</p>"},{"location":"Premiere%20NSI/Projet/spaceInvader/#debuter","title":"D\u00e9buter","text":"<p>Voici le lien   pour une documentation compl\u00e8te du module pyxel</p> <p>On y retrouve par exemple les couleurs possibles  et le num\u00e9ro \u00e0 utiliser pour les obtenir.</p> <p>On va travailler en ligne sur le site https://www.pyxelstudio.net </p> <p>Une fois le site charg\u00e9:</p> <ul> <li>Vous cliquez sur Create</li> <li>Vous enregistrez  le lien qui vous est donn\u00e9 pour pouvoir retroucver votre travail</li> <li>Vous allez coder dans la fen\u00eatre de gauche , sous import pyxel</li> <li>Et vous codez le jeu de space invaders </li> </ul>"},{"location":"Premiere%20NSI/Projet/spaceInvader/#le-debut-du-jeu-fixer-la-fenetre-et-dessiner-un-vaisseau","title":"Le d\u00e9but du jeu: Fixer la fen\u00eatre et dessiner un vaisseau.","text":"<p>Il y a dans notre progamme deux fonctions tr\u00e8s importantes : draw et update ...la premi\u00e8re dessine et la seconde met \u00e0 jour .</p> <p>Donc , on fixe notre cadre, on place notre vaisseau dans le cadre en le dessinant (hyper basiquement, ne revez pas ! ), on le fait bouger et ...c'est d\u00e9j\u00e0 pas mal !</p> <p>Voici l'exemple 1 donn\u00e9 par la documentation: </p> <pre><code>import pyxel\n\npyxel.init(160, 120)      # on cr\u00e9e une fen\u00eatre de 160 par 120\n\ndef update():\n    if pyxel.btnp(pyxel.KEY_Q):   # appuyer sur la touche Q fait quitter \n        pyxel.quit()\n\ndef draw():\n    pyxel.cls(0)   # on efface\n    pyxel.rect(10, 10, 20, 20, 11) # on dessine un carr\u00e9 de cot\u00e9 20 au point de coordonn\u00e9es (10,10), couleur 11 soit vert clair.\n\npyxel.run(update, draw) # on met \u00e0 jour , on dessine .\n</code></pre> <p>A l'aide cet exemple :</p> <ul> <li> <p>Cr\u00e9er une fen\u00eatre carr\u00e9e de 128 de cot\u00e9</p> </li> <li> <p>Cr\u00e9er deux variables vaisseau_x et vaisseau_y et leur affecter \u00e0 chacune une abscisse et une ordonn\u00e9e (entre 0 et 128 )</p> </li> <li> <p>Cr\u00e9er une fonction deplacement_vaisseau donc voici la documentation</p> </li> </ul> <p><pre><code>def deplacement_vaisseau (x,y):\n    \"\"\" Cette fonction permet de dp\u00e9lacer la position du vaisseau:\n    On utilisera la touche gauche (KEY_LEFT) pour aller vers la gauche, et les touches KEY_RIGHT, KEY_UP,KEY_DOWN pour les autres d\u00e9placements.\n    On utilisera btn au lieu de btnp de l'exemple\n    ATTENTION : l'origine du rep\u00e8re est en haut \u00e0 gauche (coordonn\u00e9es (0,0))\n    entr\u00e9e : Les coordonn\u00e9es du vaisseau avant le mouvement\n    sortie : les coordonn\u00e9es du vaisseau apr\u00e8s le d\u00e9placement\n    \"\"\"\n    pass\n</code></pre>  * Compl\u00e9ter la fonction update() ci dessous</p> <p><pre><code>def update():\n    \"\"\" cette fonction met \u00e0 jour les coordonn\u00e9es du vaisseau\n    \"\"\"\n     global vaisseau_x, vaisseau_y\n     pass\n</code></pre>  * Compl\u00e9ter la fonction draw()</p> <pre><code>def draw():\n    \"\"\" Cette fonction  efface l'ecran et dessine un vaisseau carre de cot\u00e9 entre 7 et 9 , \u00e0 votre choix . Vous avez le choix de la couleur\n    \"\"\"\n    pyxel.cls(0)\n    pyxel.rect(......)\n\npyxel.run(update, draw)\n</code></pre>"},{"location":"Premiere%20NSI/Projet/spaceInvader/#correction-partie-1","title":"Correction partie 1","text":"<pre><code># Pyxel Studio\nimport pyxel\n\n# taille de la fenetre 128x128 pixels\n# ne pas modifier\npyxel.init(128, 128)\n\n# position initiale du vaisseau\n# (origine des positions : coin haut gauche)\nvaisseau_x = 60\nvaisseau_y = 60\n\n\ndef vaisseau_deplacement(x, y):\n    \"\"\"d\u00e9placement avec les touches de directions.\n    Retourne le nouvelles coordonn\u00e9es\n    \"\"\"\n\n    if pyxel.btn(pyxel.KEY_RIGHT):\n        x = x + 1\n\n    # \u00e0 continuer\n    return x, y\n\n\n\ndef update():\n    \"\"\"mise \u00e0 jour des variables (30 fois par seconde)\"\"\"\n\n    global vaisseau_x, vaisseau_y, \n\n    # mise \u00e0 jour de la position du vaisseau\n    vaisseau_x, vaisseau_y = vaisseau_deplacement(vaisseau_x, vaisseau_y)\n\ndef draw():\n    \"\"\"cr\u00e9ation des objets (30 fois par seconde)\"\"\"\n\n    # vide la fenetre\n    pyxel.cls(0)\n\n    # vaisseau (carre 8x8)\n    pyxel.rect(vaisseau_x, vaisseau_y, 8, 8, 11)\n\n\n\npyxel.run(update, draw)\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/boucles/","title":"Les boucles","text":"<p>En programmation , on a souvent besoin d'effectuer des taches r\u00e9p\u00e9titives. Pour cela on va utiliser des boucles avec deux fa\u00e7ons principales de proc\u00e9der</p>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/boucles/#while","title":"While","text":"<p>Litt\u00e9ralement tant que . C'est une instruction que l'on peut utiliser pour un nombre connu d'actions mais surtout lorsque l'on ne sait pas \u00e0 quel moment il faut sortir de la boucle .</p> <p>Par exemple , tant qu'il n'est pas midi ( on sait quand cela s'arr\u00eate ) ou tant qu'il fait beau ( on connait la cause de l'arr\u00eat mais pas le moment)</p> <p>Syntaxe de la boucle while</p> <p>Lorsque l'on utilise la boucle while :  * Il faut penser \u00e0 initialiser la variable que l'on utilise dans la condition du while.  * Il faut penser \u00e0 modifier cette variable dans la boucle sinon , le programme ne s'arr\u00eatera pas.</p> <p>Exemple</p> <p><pre><code>a= 0\nwhile a &lt;100:  # on ne connait pas le moment de l'arr\u00eat\n    a= a*1.5\nprint(a)\n</code></pre> <pre><code>S = 0\nn = 0\nwhile n&lt;10:  # on conna\u00eft exactement le nombre d'it\u00e9rations.\n   S= S+n\n   n = n+1\nprint(S)\n</code></pre></p>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/boucles/#for","title":"For","text":"<p>La boucle for est \u00e0 utiliser quand on conna\u00eet le nombre d'it\u00e9rations \u00e0 faire.</p> <p>Le for i in range</p> <p>Tout d'abord , i est une variable que l'on remplacer par n'importe quelle autre lettre, mot , sauf les mots r\u00e9serv\u00e9s au langage python (str, int , input...)</p> <p>Par d\u00e9faut, il n'y a qu'un param\u00e8tre pour la fonction range , celui du nombre d'execution. On commence par d\u00e9faut \u00e0 0 ,avec un pas de 1  Si l'on veut afficher, calculer des valeurs jusqu'\u00e0 un certain rang , il faudra aller jusqu'\u00e0 celui d'apr\u00e8s dans le range.</p> <p>Exemple</p> <pre><code>for i in range (10):\n    print(i)   # affichage les entiers de 0 \u00e0 9\n</code></pre> <pre><code>for i in range (1,11):\n    print(i)   # affichage les entiers de 1 \u00e0 10\n</code></pre> <pre><code>for i in range (1,11,2):\n    print(i)   # affichage les entiers de 1,3,5,7,9\n</code></pre> <p>le for comme parcours d'un ensemble</p> <p>Le for peut aussi servir, il le fait tr\u00e8s souvent, \u00e0 parcourir une structure de donn\u00e9es ou m\u00eame une cha\u00efne de caract\u00e8res .</p> <pre><code>mot = \"zboub\"\nfor lettre in mot :\n    print (lettre)\n\n'z'\n'b'\n'o'\n'u'\n'b'\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/boucles/#programmes-du-td-capytale","title":"Programmes du TD capytale","text":"<ol> <li>Ecrire un programme qui affiche les nombres entiers de 10 \u00e0 19. <pre><code>for i in range(10,20):\n    print(i)\n</code></pre></li> <li>Ecrire un programme qui affiche des lignes d'\u00e9oiles avec i \u00e9toiles sur la i eme ligne <pre><code>for i in range(10):\n    print('*'*i)\n</code></pre></li> <li>Ecrire un programme qui affiche tous les nombres pairs de 2 \u00e0 250 inclus.</li> <li>Calculer la somme des 20 premiers entiers.</li> <li>Ecrire un programme qui affiche les carr\u00e9s des nombres compris entre 10 et 20 inclus.</li> <li>Reprendre cet exercice en programmant une fonction carre  dont la description est donn\u00e9e dans le docstring. le \"pass\" dans le programme , il vous faut l'enlever. <pre><code>#3\nfor i in range (2,251,2):\n    print(i)\n#4\nS=0 \nfor i in range (1,21):\n    s = S+i\nprint(f\" la somme des 20 premiers entiers est {S}\")\n\n#5\nfor i in range (10,21):\n    print (i**2)\n\n#6\ndef carre (n):\n    \"\"\" Fonction qui affiche (print) les carr\u00e9es des entiers jusqu'\u00e0 n inclus\n        Entr\u00e9e : La valeur de n\n        Sortie : Rien (pas de return).On affiche juste les carr\u00e9s des nombres jusqu'\u00e0 n.\n    \"\"\"\n    for i in range(1,n+1):\n        print(i**2)\ncarre(10)   # affiche les carr\u00e9s des nombres entre 1 et 10\n</code></pre></li> </ol>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/complements/","title":"Compl\u00e9ments : Tuples , liste de listes.","text":""},{"location":"Premiere%20NSI/algorithme%20et%20programmation/complements/#concepts-rapides","title":"Concepts rapides","text":"<ul> <li><code>tuple</code> : s\u00e9quence non mutable, d\u00e9finie avec des parenth\u00e8ses <code>(1, 2, 3)</code>.</li> <li><code>list</code> : pour rappe, s\u00e9quence mutable, d\u00e9finie avec des crochets <code>[1, 2, 3]</code>.</li> <li><code>liste de listes</code> : structure 2D courante, ex. <code>[[1,2],[3,4]]</code>.</li> </ul> <p>Attention</p> <p>Un <code>tuple</code> peut contenir des objets mutables (ex. des listes). Le tuple lui\u2011m\u00eame ne peut pas \u00eatre modifi\u00e9, mais les listes qu\u2019il contient peuvent l'\u00eatre .</p>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/complements/#exemples","title":"Exemples","text":"<pre><code>t = (1, 2, 3)\n# t[0] = 10  # TypeError: 'tuple' object does not support item assignment\n</code></pre> <p>Tuple contenant des listes (tuple immuable, \u00e9l\u00e9ments mutables) <pre><code>t = ([1, 2], [3, 4])\n# Ici t a deux \u00e9l\u00e9ments qui sont chacun une liste .\nt[0].append(9)   # autoris\u00e9 : la liste interne est modifi\u00e9e\nprint(t)         # ([1, 2, 9], [3, 4])\n# mais : t[0] = [7,8]  # TypeError\n</code></pre></p>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/complements/#liste-de-listes-ou-tableau-matrice","title":"Liste de listes (ou tableau, matrice)","text":"1 3 2 5 6 12 16 4 3 -5 854 17 <p>Pour repr\u00e9senter ce tableau en python , on va utiliser une liste qui aura autant d'\u00e9l\u00e9ments qu'il ya de lignes dans le tableau et dont chaque \u00e9l\u00e9ments sera une liste contenant les valeurs de la liste.</p> <pre><code>l = [[1,3,2], [5,6,12],[16,4,3],[-5,854,17]]\nl[0][2]     #2\nl[1][0]     #5\nlen(l)      # 4  : nombre de lignes\nlen (l[0])  # 3  : nombre de colonnes \n</code></pre> <p>Attention</p> <p><pre><code>liste = [[0]*10]*10     # On obient une liste de dix listes de dix  0\nliste[1][2]= -5         # L'\u00e9l\u00e9ment de rang 2 de chaque sous liste prend la valeur -5 \n</code></pre>  En g\u00e9n\u00e9rant la liste , le second *10 ne fait que recopier la premi\u00e8re sous liste . On a donc 10 fois la m\u00eame sous liste et si on en modifie une , on les modifie toutes .</p> <p>Pour avoir le r\u00e9sultat voulu :  <pre><code>l =[]\nfor i in range (10):\n     l.append([0]*10)\n # ou\nl =[[0]*10 for i in range(10)]\n</code></pre></p>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/complements/#quand-utiliser-quoi","title":"Quand utiliser quoi ?","text":"<ul> <li>Utiliser <code>tuple</code> quand la s\u00e9quence ne doit pas \u00eatre r\u00e9assign\u00e9e (s\u00e9curit\u00e9 / cl\u00e9 dict).</li> <li>Utiliser <code>list</code> pour structures modifiables (matrices, piles, files).</li> <li>Si vous avez un tuple de listes, sachez que seule la structure externe est prot\u00e9g\u00e9e ; les \u00e9l\u00e9ments internes peuvent changer.</li> </ul>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/dictionnaires/","title":"Cours : Les dictionnaires Python \u2014 Premi\u00e8re NSI","text":""},{"location":"Premiere%20NSI/algorithme%20et%20programmation/dictionnaires/#questce-quun-dictionnaire","title":"Qu'est\u2011ce qu'un dictionnaire ?","text":"<ul> <li>Un dictionnaire est une structure de donn\u00e9es associant des cl\u00e9s \u00e0 des valeurs. Les cl\u00e9s ne sont pas accessibles \u00e0 l'aide d'un indice , les dictionnaires ne sont donc pas de s\u00e9quences.</li> <li>Les cl\u00e9s sont uniques et immuables tandis que les valeurs sont de n'importe quel type</li> <li>Syntaxe : <code>{\"cl\u00e9\": valeur, ...}</code></li> </ul>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/dictionnaires/#creation-et-acces","title":"Cr\u00e9ation et acc\u00e8s","text":"<pre><code>d = {\"nom\": \"Alice\", \"age\": 17}\nprint(d[\"nom\"])          # \"Alice\"\nprint(d.get(\"ville\"))    # None (\u00e9vite KeyError) \nprint(d.get(\"ville\", \"inconnue\"))  # \"inconnue\"\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/dictionnaires/#ajouter-modifier-supprimer","title":"Ajouter / modifier / supprimer","text":"<pre><code>d[\"ville\"] = \"Paris\"     # ajout ou modification\nd[\"age\"] = 18            # modification de la valeur \nd.update({\"age\": 18})    # met \u00e0 jour plusieurs paires\nd.pop(\"age\")             # supprime et retourne la valeur\ndel d[\"nom\"]             # supprime la cl\u00e9 (KeyError si absente)\nd.clear()                # vide le dictionnaire\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/dictionnaires/#parcourir-un-dictionnaire","title":"Parcourir un dictionnaire","text":"<pre><code>for k in d:              # parcourt les cl\u00e9s\n    print(k, d[k])\n\nfor k, v in d.items():   # cl\u00e9s et valeurs\n    print(k, v)\n\nfor v in d.values():     # seules les valeurs\n    print(v)\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/dictionnaires/#creation-par-comprehension-dun-dictionnaire","title":"Cr\u00e9ation par compr\u00e9hension d'un dictionnaire.","text":"<pre><code>carr\u00e9s = {i: i*i for i in range(6)}  # {0:0, 1:1, 2:4, ...}\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/dictionnaires/#dictionnaires-imbriques","title":"Dictionnaires imbriqu\u00e9s","text":"<ul> <li>Les valeurs d'un dictionnaire peuvent \u00eatre de n'importe quel type... et notamment un dictionnaire.</li> <li>Cela permet de repr\u00e9senter des objets plus complexes (par ex. annuaire). <pre><code>annuaire = {\n  \"alice\": {\"age\": 17, \"ville\": \"Lyon\"},\n  \"bob\": {\"age\": 18, \"ville\": \"Paris\"}\n}\nprint(annuaire[\"alice\"][\"ville\"])  # \"Lyon\"\n</code></pre></li> </ul> <p>Attention</p> <ul> <li>Les cl\u00e9s doivent \u00eatre immuables (listes non autoris\u00e9es).</li> <li><code>d1 = d2</code> cr\u00e9e une r\u00e9f\u00e9rence ; utiliser <code>copy()</code> pour dupliquer.</li> <li>L'ordre des \u00e9l\u00e9ments est pr\u00e9serv\u00e9 depuis Python 3.7 </li> </ul>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/dictionnaires/#exemple","title":"Exemple","text":"<ul> <li>Compter les lettres d'une cha\u00eene : <pre><code>s = \"banana\"\ncompte = {}\nfor c in s:\n    if c in compte:\n        compte[c] = compte[c]+1\n    else:\n        compte[c] = 1\n\n# {'b':1, 'a':3, 'n':2}\n</code></pre></li> </ul>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fichiers/","title":"Fichiers","text":""},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fichiers/#concepts-cles","title":"Concepts cl\u00e9s","text":"<ul> <li>Un fichier = flux de caract\u00e8res (texte) ou d'octets (binaire).</li> <li>Modes courants : <code>r</code> (lecture), <code>w</code> (\u00e9criture, \u00e9crase), <code>a</code> (ajout), <code>x</code> (cr\u00e9ation), <code>b</code> (binaire), <code>+</code> (lecture+\u00e9criture).</li> <li>Toujours fermer un fichier (ou utiliser <code>with</code> pour g\u00e9rer automatiquement la fermeture).</li> <li>Encodage courant : <code>utf-8</code>.</li> </ul>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fichiers/#exemples-simples","title":"Exemples simples","text":"<p>Lire tout le contenu : La fonction open attend au moins deux arguments : le nom du fichier \u00e0 traiter et son mode de traitement <pre><code>with open(\"notes.txt\", \"r\", encoding=\"utf-8\") as f: #as f : on utilise un alias \n    texte = f.read()\nprint(texte)\n</code></pre> Autre m\u00e9thode , sans with</p> <pre><code>f = open(\"notes.txt\", \"r\", encoding=\"utf-8\") \ntexte = f.read()\nprint(texte)\nf.close()\n</code></pre> <p>Lire ligne par ligne : <pre><code>with open(\"notes.txt\", \"r\", encoding=\"utf-8\") as f:\n    for ligne in f:\n        print(ligne.strip())\n</code></pre> ou utiliser la m\u00e9thode readline <pre><code>with open(\"notes.txt\", \"r\", encoding=\"utf-8\") as f:\n    f.readline()\n</code></pre></p> <p>\u00c9crire dans un fichier (\u00e9crase) : <pre><code>with open(\"sortie.txt\", \"w\", encoding=\"utf-8\") as f:\n    f.write(\"Premi\u00e8re ligne\\nDeuxi\u00e8me ligne\\n\") # \\n permet d'aller \u00e0 la ligne\n</code></pre></p> <p>Ajouter au fichier : <pre><code>with open(\"sortie.txt\", \"a\", encoding=\"utf-8\") as f:\n    f.write(\"Ligne ajout\u00e9e\\n\")\n</code></pre></p> <p>Lire un fichier <code>*.csv</code> avec  le module <code>csv</code> :</p> <ul> <li>On importe chaque enregistrement dans une liste. <pre><code>import csv\nwith open(\"table.csv\", newline=\"\", encoding=\"utf-8\") as f:\n    lecteur = csv.reader(f, delimiter=';')\n    for row in lecteur:\n        print(row)\n</code></pre></li> <li>On importe les donn\u00e9es de chaque enregistrement dans un dictionnaire : En cl\u00e9s les descripteurs, en valeur la donn\u00e9e correpsondante.</li> </ul> <p><pre><code>import csv\nwith open(\"table.csv\", newline=\"\", encoding=\"utf-8\") as f:\n    lecteur = csv.DictReader(f, delimiter=';')\n    for row in lecteur:\n        print(row)\n</code></pre> Exportation dans un fichier csv</p> <pre><code># Cr\u00e9er une liste pour les en-t\u00eates\nen_tete = [\"titre\", \"description\"]\n\n# Cr\u00e9er un nouveau fichier pour \u00e9crire dans le fichier appel\u00e9 \u00ab data.csv \u00bb\nwith open('data.csv','w') as fichier_csv:\n    # Cr\u00e9er un objet writer (\u00e9criture) avec ce fichier\n    writer = csv.writer(fichier_csv, delimiter=';')\n    writer.writerow(en_tete)                         # Les cl\u00e9s de notre dictionnaire deviennent les descripteurs de notre fichier csv.\n    pass                                             # D\u00e9pend de la forme de la structure sur laquelle on travaille.\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fichiers/#exercices","title":"Exercices","text":"<ol> <li>\u00c9crire un programme qui compte le nombre de lignes non vides d'un fichier.</li> <li>Lire un fichier de nombres (un par ligne) et afficher leur somme.</li> <li>Copier seulement les lignes contenant un mot-cl\u00e9 donn\u00e9 dans un nouveau fichier.</li> </ol>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fonctions/","title":"Les Fonctions en Python","text":""},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fonctions/#quest-ce-quune-fonction","title":"Qu'est-ce qu'une fonction ?","text":"<p>Une fonction est un bloc de code qui r\u00e9alise une t\u00e2che pr\u00e9cise. Elle permet de r\u00e9utiliser du code sans le r\u00e9\u00e9crire.</p>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fonctions/#pourquoi-utiliser-des-fonctions","title":"Pourquoi utiliser des fonctions ?","text":"<ul> <li>R\u00e9utilisation : \u00e9crire une fois, utiliser plusieurs fois.</li> <li>Lisibilit\u00e9 : le code est plus clair et organis\u00e9.</li> <li>Modularit\u00e9 : chaque fonction a un r\u00f4le pr\u00e9cis.</li> </ul>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fonctions/#definir-une-fonction","title":"D\u00e9finir une fonction","text":"<p>Pour cr\u00e9er une fonction en Python, on utilise le mot-cl\u00e9 <code>def</code> :</p> <pre><code>def nom_de_la_fonction():\n    # instructions\n</code></pre> <p>Exemple :</p> <pre><code>def dire_bonjour():\n    print(\"Bonjour !\")\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fonctions/#appeler-une-fonction","title":"Appeler une fonction","text":"<p>Pour ex\u00e9cuter une fonction, il suffit d'\u00e9crire son nom suivi de parenth\u00e8ses :</p> <pre><code>dire_bonjour()\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fonctions/#les-parametres","title":"Les param\u00e8tres","text":"<p>On peut donner des param\u00e8tres \u00e0 une fonction pour qu'elle soit plus flexible :</p> <pre><code>def saluer(prenom):\n    print(\"Bonjour\", prenom)\n</code></pre> <p>Appel avec un param\u00e8tre :</p> <pre><code>saluer(\"Alice\")\nsaluer(\"Bruno\")\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fonctions/#la-valeur-de-retour","title":"La valeur de retour","text":"<p>Une fonction peut renvoyer une valeur avec le mot-cl\u00e9 <code>return</code> :</p> <pre><code>def carre(x):\n    return x * x\n</code></pre> <p>Utilisation :</p> <pre><code>resultat = carre(5)\nprint(resultat)  # Affiche 25\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fonctions/#la-documentation","title":"La documentation","text":"<p>Il peut \u00eatre utile de commenter une fonction en expliquant ce qu'elle fait, le type des param\u00e8tres, ce qu'elle renvoie... On parle de docstring</p> <pre><code>def carre(x):\n    \"\"\" Cette fonction renvoie le carr\u00e9 d'un nombre pass\u00e9 en param\u00e8tre\n    entr\u00e9e : Un entier x\n    sortie : le carr\u00e9 de ce nombre\n    \"\"\"\n    return x*x\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fonctions/#difference-entre-le-print-et-le-return","title":"Diff\u00e9rence entre le print et le return","text":"<p>Voici la diff\u00e9rence entre <code>print</code> et <code>return</code> dans une fonction Python\u202f:</p> <ul> <li><code>print</code> affiche une information \u00e0 l'\u00e9cran (dans la console par exemple). Il sert \u00e0 communiquer avec l'utilisateur ou \u00e0 d\u00e9boguer.</li> <li><code>return</code> renvoie une valeur \u00e0 l'endroit o\u00f9 la fonction a \u00e9t\u00e9 appel\u00e9e. Cette valeur peut \u00eatre utilis\u00e9e dans d'autres calculs ou stock\u00e9e dans une variable.</li> </ul> <p>Exemple\u202f:</p> <pre><code>def affiche_somme(a, b):\n    print(a + b)  # Affiche le r\u00e9sultat, mais ne le renvoie pas\n\ndef calcule_somme(a, b):\n    return a + b  # Renvoie le r\u00e9sultat, utilisable ailleurs\n\n# Utilisation\naffiche_somme(2, 3)      # Affiche 5, mais ne retourne rien\nresultat = calcule_somme(2, 3)\nprint(resultat)           # Affiche 5, car resultat vaut 5\n</code></pre>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/fonctions/#a-retenir","title":"\u00c0 retenir :","text":"<ul> <li>Une fonction s'\u00e9crit avec <code>def</code>.</li> <li>On peut lui donner des param\u00e8tres.</li> <li>On peut documenter la fonction afin d'expliquer ce qu'elle fait.</li> <li>On peut utiliser <code>return</code> pour renvoyer une valeur.</li> <li>Les fonctions rendent le code plus clair et r\u00e9utilisable.</li> <li>Utilisez <code>print</code> pour afficher.</li> <li>Utilisez <code>return</code> pour transmettre une valeur \u00e0 l'ext\u00e9rieur de la fonction.</li> </ul>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/listes/","title":"Les listes","text":"<p>Nous avons pr\u00e9sent\u00e9 dans un premier temps, les types de base (nombre entier ou flottant, caract\u00e8res, bool\u00e9ens).Il est possible de travailler avec des \u00e9l\u00e9ments plus \u00e9labor\u00e9s et notamment ce que l\u2019on appelle des s\u00e9quences .</p>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/listes/#definition","title":"D\u00e9finition","text":"<p>Definition</p> <p>Une s\u00e9quence , en langage python , est un ensemble ordonn\u00e9 c'est \u00e0 dire un ensemble dont on peut acc\u00e9der aux \u00e9lements \u00e0 l'aide d'un indice.</p> <p>Les listes sont des s\u00e9quences , ce sont donc donc des ensembles ordonn\u00e9es dont on peut acc\u00e9der aux \u00e9l\u00e9ments \u00e0 l'aide d'un indice .</p> <p>On peut changer un \u00e9l\u00e9ment d'une liste : On dit que les listes sont mutables</p> <pre><code>l =[2,3,5,47]\nl[2]=-50\nprint(l)\n[2,3,-50,47]\n</code></pre> <p>Les indices en python</p> <p>Attention , les indices commencent \u00e0 0. Une liste est d\u00e9finie entre [ ] Exemple ; l =[1,5,4,7,9] . l[0] vaut 1 et 9 correpond au 5 \u00e8me \u00e9l\u00e9ment de la liste , soit l[4]. <pre><code>l=[2,5,7,6,9]\nprint(l[2])\n#7\n</code></pre></p>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/listes/#generation-dune-liste","title":"G\u00e9n\u00e9ration d'une liste","text":"<p>Il existe plussieurs fa\u00e7ons de g\u00e9n\u00e9rer une liste </p> <ol> <li>En extension    l= [1,2,3,4,5]</li> <li>Par compr\u00e9hension    l=[ i for i in range(1,6)] # c'est la m\u00eame liste qu'au dessus</li> <li>Cr\u00e9ation d'une liste de 10 0    l =[0]*10</li> </ol> <p> On peut aussi utiliser la fonction range : list(range(0,10)) renvoie la liste [0,1,2,3,4,5,6,7,8,9]</p>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/listes/#operation-sur-les-listes","title":"Op\u00e9ration sur les listes","text":"<p>Les m\u00e9thodes</p> <p>Une m\u00e9thode est \"une sorte de fonctions\" qui s'applique \u00e0 des objets d'un type d\u00e9finies. On va s'int\u00e9resser ici \u00e0 quelques m\u00e9thodes qui s'appliquent aux listes </p> Nom de la m\u00e9thode Action sur la liste append ajoute un \u00e9l\u00e9ment \u00e0 la fin de la liste pop enl\u00e8ve le dernierr \u00e9lement et le renvoie pop(i) enl\u00e8ve l'\u00e9l\u00e9ment d'indice i remove(elt) enl\u00e8ve l'\u00e9l\u00e9ment elt de la liste insert (index, valeur ) ins\u00e8re valeur au rang index de la liste <pre><code># Ajouter un \u00e9l\u00e9ment : append \n l= [1,2,3]\n l.append(4)\n print (l)\n[1, 2, 3, 4]\n\n# retirer le dernier \u00e9l\u00e9ment : pop\nl.pop()\n4\nprint(l)\n[1, 2, 3]\n\n# supprimer un \u00e9l\u00e9ment : remove \nl.remove (2)\nprint(l)\n[1,3]\n\n# ins\u00e9rer un \u00e9l\u00e9ment \u00e0 un index donn\u00e9\nl.insert(1,54)\nprint(l)\n[1,54,3]\n\n# ajouter plusieurs \u00e9l\u00e9ments \u00e0 la fin d'une liste : extend \nl.extend ([5,6,7])\nprint(l)\n[1, 2, 3, 5, 6, 7]\n\n# Remarque : on peut aussi concatener deux listes \nl + [123,456]\nprint(l)\nl = [1,2,3,5,6,7,123,456]\n</code></pre> <p> Un incontournable : len <pre><code># Obtenir la longueur d'une liste : len\nl= [1,2,3]\nlen(l)\n3\n</code></pre></p>"},{"location":"Premiere%20NSI/algorithme%20et%20programmation/listes/#copie-dune-liste","title":"Copie d'une liste","text":"<p>La copie d'une liste</p> <pre><code>l=[1,2,3]\nm = l\nl[1] =-17\nprint(l)\n[1,-17,3]\nprint(m)\n[1,-17,3] \n</code></pre> <p> m et l repr\u00e9sente ici le m\u00eame objet. Quand on modifie l'un, on modifie l'autre. Deux possibilit\u00e9s pour pouvoir garder une copie initiale de la liste</p> <pre><code>l=[1,2,3]\nm = l[:]   # ou m = list(l)\nl[1] =-17\nprint(l)\n[1,-17,3]\nprint(m)\n[1,2,3] \n</code></pre>"},{"location":"SNT/","title":"Accueil","text":""},{"location":"SNT/#chapitres","title":"Chapitres","text":"<ul> <li>Internet</li> </ul>"},{"location":"SNT/internet/","title":"INTERNET","text":""},{"location":"SNT/internet/#introduction","title":"Introduction","text":"<p>INTRO</p> <p>Internet, on entend ce mot quarante fois par jour. Mais, qu'est ce donc ? Et surtout comment \u00e7a marche ? </p> <p>Une video d'introduction</p> <p>Video</p> <p>Un texte d'introduction</p> <p>Que se passe-t-il lorsque vous tapez dans la barre d'adresse de votre navigateur \u00abhttp://www.google.fr\u00bb ? Votre ordinateur va chercher \u00e0 entrer en communication avec un autre ordinateur se trouvant probablement \u00e0 des milliers de kilom\u00e8tres de chez vous. Pour pouvoir \u00e9tablir cette communication, il faut bien s\u00fbr que les 2 ordinateurs soient \u00ab reli\u00e9s \u00bb. On dira que nos 2 ordinateurs sont en r\u00e9seau. Il existe \u00e9norm\u00e9ment de r\u00e9seaux (la plupart des ordinateurs du lyc\u00e9e sont en \u00ab r\u00e9seau \u00bb), certains r\u00e9seaux sont reli\u00e9s \u00e0 d'autres r\u00e9seaux qui sont eux-m\u00eames reli\u00e9s \u00e0 d'autres r\u00e9seaux... ce qui forme \u00ab des r\u00e9seaux de r\u00e9seaux de r\u00e9seaux...\u00bb. Savez-vous comment on appelle cet assemblage multiple de r\u00e9seaux ? Internet !</p> <p>L'id\u00e9e de relier des r\u00e9seaux d'ordinateurs \u00e0 d'autres r\u00e9seaux d'ordinateurs date du d\u00e9but des ann\u00e9es 70 avec le projet ARPAnet qui est, avec juste raison, consid\u00e9r\u00e9 comme l'anc\u00eatre d'internet.</p> <p>Afin de pouvoir s'identifier, tout ordinateur poss\u00e8de une adresse sur un r\u00e9seau : son adresse IP.</p> <p>Une adresse IP est de la forme \"74.125.133.94\" (cette adresse IP correspond au serveur de google \"google.fr\")</p> <p>Les adresses IP sont de la forme : \"a.b.c.d\", avec a, b, c et d compris entre 0 et 255. Nous aurons l'occasion de revenir l\u00e0-dessus un peu plus tard.</p> <p>N.B. Une autre norme est en train d'\u00eatre d\u00e9ploy\u00e9e, la norme IPV6 (alors que les adresses IP vues ci-dessus appartiennent \u00e0 la norme IPV4). Pourquoi cette nouvelle norme ? Parce qu' avec le syst\u00e8me IPV4, il risque, dans les prochaines ann\u00e9es, de manquer d'adresses IP disponibles sur internet.</p> <p>site Pixees</p> <p>Remplir la fiche N1</p> <p> T\u00e9l\u00e9chargez la fiche</p>"},{"location":"SNT/internet/#lhistorique","title":"L'historique","text":"<p>Quelques dates importantes</p> <p></p> <p>Travail \u00e0 Faire :  </p> <pre><code>       1. R\u00e9aliser une frise\n\n       2. Trouver aujourd'hui le pourcentage de la population qui est connect\u00e9 \u00e0 internet \n              et le pourcentage d'utilisation de la fibre. \n          En France , dans le monde et dans un pays de votre choix\n</code></pre>"},{"location":"SNT/internet/#le-routage","title":"Le routage","text":"<p>D\u00e9finitions</p> <ol> <li>Octet :C'est l'unit\u00e9 de base utilis\u00e9e en informatique pour quantifier les grandeurs . Chaque octet est compos\u00e9 de 8 symboles, appel\u00e9s bits et prenant la valeur 0 ou 1.</li> <li>Paquet : C'est un ensemble de donn\u00e9es qui transite sur le r\u00e9seau. Un paquet a une taille tr\u00e8s limit\u00e9e(1500 octets maximum)</li> <li>Routage : C'est le m\u00e9canisme de transport d'un paquet de donn\u00e9es d'une source \u00e0 un destinataire .</li> <li>Routeur  : C'est l'\u00e9quipement informatique qui assure l'acheminement des donn\u00e9es de l'\u00e9metteur au destinaitaire . </li> </ol> <p> un r\u00e9seau informatique</p> <p>Le fonctionnement du routage</p> <p>Un ensemble de donn\u00e9es doit \u00eatre transmis depuis une machine A vers un machine B. La machine A est connect\u00e9e \u00e0 un r\u00e9seau et la porte d'entr\u00e9e de cette machine sur le r\u00e9seau est souvent, au moins dans les habitations , une box. Cette box est un routeur et est en liaison avec ses routeurs voisins. Chacun poss\u00e8de une table de routage qui lui permet d'envoyer le paquet au bon endroit.</p> <p>Remarque : Lorsqu'une route est coup\u00e9e, les routeurs ont toujours une solution pour acheminer les paquets : Ils trouvent un autre chemin. On peut faire l'analogie avec les GPS </p>"},{"location":"SNT/internet/#les-protocoles-de-routage","title":"Les protocoles de routage","text":"<p>Les transferts de donn\u00e9es , les communications se font sur internet \u00e0 l'aide d'une s\u00e9rie de protocole selon un mod\u00e8le appel\u00e9 TCP/IP</p> <p>D\u00e9finition</p> <p>Un protocole est  un ensemble de r\u00e8gles/formes qui r\u00e9gissent une interaction ou une communication, que ce soit dans les domaines social, diplomatique, juridique ou informatique, afin d\u2019assurer                 l\u2019interop\u00e9rabilit\u00e9, la s\u00e9curit\u00e9 et le bon d\u00e9roulement des \u00e9changes entre les parties ou syst\u00e8mes. (d\u00e9finition IA de qwant )</p> <p>Le mod\u00e8le TCP/IP</p> <p></p> <p>Le mod\u00e8le TCP/IP est compos\u00e9 de quatre couches :</p> <ul> <li>La couche application utilise des logiciels qui s'appuient sur lkes protocoles comme HTTPS ( web), SMTP ( mail)</li> <li>La  couche transport utilise le protocole TCP qui est charg\u00e9 d'acheminer les paquets sur le r\u00e9seau . Ce protocole v\u00e9rifie aussi que les donn\u00e9es arrivent bien \u00e0 leur destinaire.</li> <li>La couche interne utilise le protocole IP qui permet le cheminement des donn\u00e9es \u00e0 travers les diff\u00e9rents routeurs \u00e0 l'aide de l'adresse IP</li> <li>La couche r\u00e9seau qui s'assure de la liaison physique et donc du mode d'acheminement sur les machines : Ethernet, fibre ... </li> </ul> <p>Que fait le protocole TCP ?</p> <p>C'est lui qui r\u00e9git les \u00e9cahnges de donn\u00e9es en tre deux machines . Plus pr\u00e9cisement</p> <ul> <li> <p>Il v\u00e9rifie que le destinataire est pr\u00eat \u00e0 recevoir les donn\u00e9es</p> </li> <li> <p>Il pr\u00e9pare les envoie de paquets en d\u00e9coupant les donn\u00e9es \u00e0 envoyer en 'paquet' de petite taille</p> </li> <li> <p>Il v\u00e9rifie que chaque paquet est bien arriv\u00e9 . Si ce n'est pas le cas , le TCP du destinataire  redemande les paquets manquants et il les assemble pour reformer le message initial</p> </li> </ul> <p>Quel est le r\u00f4le du protocole IP ?</p> <p>Avant de voir le r\u00f4le du protocole IP, d\u00e9finissons ce que l'on appelle une adresse IP.</p> <p>Definition : Adresse IP</p> <p>Tout objet connect\u00e9 sur internet poss\u00e8de une adresse IP, de type IPV4, unique . Celle ci est compos\u00e9e de quatre nombre entre 0 et 255 s\u00e9par\u00e9 par des points : Ex 192.168.21.1</p> <p>Cette adresse IP est compos\u00e9e de deux parties : </p> <pre><code>* Une partie qui identifie le r\u00e9seau, c'est la partie \u00e0 gauche.\n\n* Une partie qui identifie la machine sur le r\u00e9seau , c'est la parie \u00e0 droite.\n\n* Il est toujours pr\u00e9cis\u00e9 combien de nombres identifient la partie r\u00e9seau et donc machine.\n\nRemarque : Afin de pouvoir utiliser plus d'adresse IP, il existe des adresses IPV6, permettant d' accueillir \nbeaucoup plus d'appreils connect\u00e9s sur un r\u00e9seau.\n</code></pre> <p>Le r\u00f4le du protocole IP est de s'assurer du bon acheminement des donn\u00e9es \u00e0 transmettre entre deux machines. Il s'appuie pour cela sur les adresses IP des machines , en s'aidant des tables de routage de chaque routeur travers\u00e9s.</p> <p>Et le protocole DNS dans tout \u00e7a ?</p> <p>Le protocole DNS (domain name system )  est un protocole qui permet de lier une adresse IP et une URL (www.lyceerotroudreux.com est l'URL qui permet de se rendre sur le site du lyc\u00e9e  )           </p> <p>Le DNS est l'annuaire d'internet: Il transforme l'url demand\u00e9e en l'adresse IP correpsondante . Pour le lyc\u00e9e , il s'agit de 62.210.16.61.Plus simple de retenir  l'url...</p> <p>La video ultime</p> <p>Comment fonctionne la transmission de donn\u00e9es sur internet</p>"},{"location":"SNT/internet/#activite-autour-des-adresses-ip","title":"Activit\u00e9 autour des adresses IP","text":"<p>Un  peu plus loin avec les adresses ip</p> <p>On a vu en cours qu\u2019une adresse IPv4 \u00e9tait compos\u00e9es de 4 octets s\u00e9par\u00e9s par des points Une partie de cette adresse sert \u00e0 identifier le r\u00e9seau, la partie de gauche et le reste sert \u00e0 identifier les machines sur le r\u00e9seau.</p> <p>Dans le reste de ce TD les trois octets les plus \u00e0 gauche servent \u00e0 identifier le r\u00e9seau.</p>"},{"location":"SNT/internet/#exercice-1","title":"Exercice  1","text":"<p>Le r\u00e9seau est identifi\u00e9 par les trois premiers octets Quels sont les ordinateurs qui sont sur le r\u00e9seau identifi\u00e9 par l\u2019adresse ip 192.168.21.0 ?</p> <ol> <li> <p>192.168.21.87</p> </li> <li> <p>192.168.21.258</p> </li> <li> <p>192.168.0.21</p> </li> <li> <p>192.168.21.255</p> </li> </ol>"},{"location":"SNT/internet/#exercice-2","title":"Exercice 2","text":"<ol> <li>Donner une adresse IP possible pour un r\u00e9seau. </li> <li>Donner trois adresses possibles pour des machines sur ce r\u00e9seau.</li> </ol>"},{"location":"SNT/internet/#conversion-en-binaire","title":"Conversion en binaire","text":""},{"location":"SNT/internet/#le-systeme-binaire","title":"Le syst\u00e8me binaire","text":"<p>Le syst\u00e8me binaire s\u2019appuie sur deux symboles, le 0 et le 1 , mais fonctionne exactement comme le syst\u00e8me d\u00e9cimal . D\u00e8s qu\u2019un rang est plein, on augmente de 1 celui d\u2019apr\u00e8s et on r\u00e9initialise \u00e0 0. Voici la construction de l\u2019\u00e9criture des premiers entiers en binaire.</p> d\u00e9cimal binaire 0 0 1 1 2 10 3 11 4 100 5 101 6 110 7 111 8 1000 9 1001 10 1010"},{"location":"SNT/internet/#passage-du-systeme-decimal-au-binaire-et-reciproquement","title":"Passage du syst\u00e8me d\u00e9cimal au binaire et r\u00e9ciproquement","text":"<p>Du d\u00e9cimal au  binaire</p> <p>Il existe une m\u00e9thode tr\u00e8s simple pour passer du d\u00e9cimal au binaire. Cette m\u00e9thode est fond\u00e9e sur l\u2019algorithme d\u2019\u2019Euclide et les restes successifs de la division euclidienne par 2 de l\u2019entier que l\u2019on veut convertir. On obtient une succession de reste (0 ou 1) . Il suffit de les \u00e9crire du dernier obtenu , qui doit \u00eatre 1, au premier.  Exemple : Convertissons 104 en binaire </p> 104 Reste de la division par 2 104=2*52 0 52=2*26 0 26=2*13 0 13= 6*2+1 1 6=3*2 0 3=2*1+1 1 1=2*0+1 1 <p>L'\u00e9criture binaire de 104 s'obtient en \u00e9crivant les restes obtenus du dernier au permier soit ici 1101000</p> <pre><code>&gt; Un nombre pair se finira toujours par un 1 en binaire\n</code></pre>"},{"location":"SNT/internet/#le-binaire-sur-un-octet","title":"Le binaire sur un octet","text":"<ul> <li>L'unit\u00e9 de base en informatqiue est le bit , qui prend donc la valeur 0 ou 1</li> <li>Un octet est compos\u00e9 de 8 bits .</li> <li>Le plus petit nombre que l'on peut \u00e9crire sur un octet est 0 et le plus grand 255, qui correspond \u00e0 11111111</li> <li>La notation internationale pour l'octet est o. On parlera alors de ko (kilooctet), Mo (Megaoctet);Go(Gigaoctet)...</li> </ul> <p>L'astuce pour \u00e9crire rapidement un nombre en binaire</p> <p>L'astuce repose sur la connaissance des puissances de 2 , jusqu'\u00e0 \\(2^{7}\\)</p> <p></p> <p>source: siloged.fr</p> <p>Il suffit donc de voir si les diff\u00e9rentes puissances de 2 \"rentre\" dans le nombre que l'on veut \u00e9crire . Si c'est le cas , on soustrait la;puissance de 2 au nombre \u00e0 decimal et on reccomence avec la puissance inf\u00e9rieure .</p>"},{"location":"SNT/internet/#exercice-3","title":"Exercice 3","text":"<p>Convertir en binaire les nombre suivants:   .19           . 25         .65             .108       .217    .254</p>"},{"location":"SNT/structuresDeDonnees/","title":"Structures de donn\u00e9es \u2014 niveau SNT","text":""},{"location":"SNT/structuresDeDonnees/#introduction","title":"Introduction","text":"<p>Aujourd'hui , la data est au coeur de toutes les activit\u00e9s. Pas un jour sans entendre parler des data centers, les formations professionnelles autour des datas se multiplient. La data est au coeur de tout. Il faut comprendre le pass\u00e9 pour pr\u00e9dire l'avenir. Pour cela, on doit \u00e9tudier les donn\u00e9es.</p> <p>Aujourd'hui, la capacit\u00e9 \u00e0 collecter ces donn\u00e9es est tr\u00e8s importante et nous avons les outils pour les traiter.  L'intelligence artificielle s'appuie sur ces fameuses donn\u00e9es. Les agents les exploitent afin de proposer leurs solutions. </p> <p>ici, nous allons nous int\u00e9resser \u00e0 des exemples simples , en utilisant notamment des tableurs pour structurer puis exploiter ces donn\u00e9es .</p> <p> A retenir</p> <p>Les structures de donn\u00e9es permettent de :</p> <ul> <li>Stocker</li> <li>Structurer</li> <li>Exploiter </li> </ul>"},{"location":"SNT/structuresDeDonnees/#vocabulaire","title":"Vocabulaire","text":"<p>Un tel tableau s'appelle une collection ou une table.</p> <p>Sur chaque ligne, on trouve un enregistrement ou un objet. </p> <p>Sur chaque colonne, on trouve un descripteur.</p> <p>A l'intersection des deux se trouve une donn\u00e9e.</p> <p>Un enregsitrement est donc caract\u00e9ris\u00e9 par un certains nombres de donn\u00e9es .</p> <p>Une donn\u00e9e peut prendre des valeurs de diff\u00e9rentes natures : Cela peut \u00eatre un nombre (entier ou r\u00e9el), une chaine de caract\u00e8res, une format sp\u00e9cial de type date ...</p>"},{"location":"SNT/structuresDeDonnees/#exercice","title":"Exercice","text":"<p>Dans le tableau ci dessus, citez les descripteurs  et expliquez ce que repr\u00e9sente chaque objet de la collection.</p>"},{"location":"SNT/structuresDeDonnees/#format","title":"Format","text":"<p>Le format d'un fichier en informatique est indiqu\u00e9 par son extension, g\u00e9n\u00e9ralement quelques lettres apr\u00e8s un point dans le nom du fichier . C'est cette extension qui indique \"\u00e0 l'ordinateur ' comment lire et utiliser le fichier </p> <p>Exemples</p> <p>  On a ici deux format texte : docx et csv  Des formats binaires xlsx, pdf: Les formats binaires ne sont pas lisibles par des logiciels de  traitements de texte .</p> <p>Remarque : Pour afficher les extensions dans windows, ouvrir l'explorateur de fichiers, puis affichage et cochez extension des noms de fichiers.</p> <p>Format et donn\u00e9es structur\u00e9es </p> <p>. Les formats xsl, xlsx, ods utilis\u00e9s par des logiciels comme Excel , Libre Office ou Open Office.</p> <p>. Le format csv qui pr\u00e9sente l'avantage de pouvoir \u00eatre utilis\u00e9 directement par des langages informatiques comme Python. Ce format est exploitable par des tableurs classiques.</p> <p>. Le format Json , adapt\u00e9 au langage javascript.</p> <p>. Le format sql , utilis\u00e9 pour les bases de donn\u00e9es qui regroupent des collections g\u00e9antes .</p> <p>A retenir</p> <ul> <li>Une extension de fichier permet de savoir comment l'ouvrir et l'utliser</li> <li>Le format csv , qui est un format texte, pr\u00e9sente la sp\u00e9cificit\u00e9 d'\u00eatre facilement exploittable par diff\u00e9rents types de programmes : Tableur, lecteur de fichier texte , programme informatique .</li> <li>Les formats binaires ne sont pas lisibles par des logiciels de traitements de texte</li> </ul>"},{"location":"SNT/structuresDeDonnees/#activite-1","title":"Activit\u00e9 1","text":"<p>  Par groupe de cinq, vous devez choisir quatre descripteurs qui permettent de faire deviner, sans citer son nom:</p> <ol> <li>Un pays</li> <li>Une voiture</li> <li>Un individu</li> <li>Un aliment</li> </ol> <p>A retenir</p> <p>Les descripteurs sont fondamentaux pour bien classer et identifier les donn\u00e9es .  On retrouve cette exigence lorsqu'on \u00e9crit un prompt avec l'IA </p>"},{"location":"SNT/structuresDeDonnees/#activite-2","title":"Activit\u00e9 2","text":"<p> Vous allez cr\u00e9er un fichier *.csv \u00e0 l'aide du logiciel Excel</p> <p>Consignes</p> <ul> <li>Le th\u00eame est libre </li> <li>Votre table contient au moins dix objets et quatre descripteurs </li> <li>Le fichier est enregistr\u00e9 au format csv, d\u00e9limiteur : point virgule.</li> <li>Le fichier est enregistr\u00e9 dans le dossier de votre espace personnel :    SNT/StructuresDeDonnes</li> </ul> <p> R\u00e9alisation d'une feuille de calcul pour calculer la moyenne d'un \u00e9l\u00e8ve :</p> <p>Consignes</p> <ul> <li>3 descripteurs : Mati\u00e8re, Note, Coefiicient.</li> <li>8 enregsitrements : Maths, PC, EPS, Fran\u00e7ais, HG, SNT, SVT, Anglais </li> <li>Les coefficients respectifs sont : 5, 2, 2, 6, 2, 1, 1, 3</li> <li>Vous mettez une note entre 0 et 20</li> <li>Vous devez calculer votre moyenne en tenant compte des coefficients</li> <li>Le fichier est enregistr\u00e9 dans le dossier de votre espace personnel :    SNT/StructuresDeDonnes</li> </ul>"},{"location":"SNT/structuresDeDonnees/#activite-3-recuperation-dun-fichier-donnees-ouvertes","title":"Activit\u00e9 3 : R\u00e9cup\u00e9ration d'un fichier \"donn\u00e9es ouvertes\"","text":"<p>Nous allons importer puis pr\u00e9parer nos donn\u00e9es afin de les \u00e9tudier . Pour cela , vous allez vous rendre sur le site data.gouv et acc\u00e9der aux donn\u00e9es relatives aux incendies en France en 2024. Pour retrouver le bon fichier :</p> <ul> <li>Il est \u00e9mis par IGN</li> <li>Il s'agit de la base de donn\u00e9es des incendies de for\u00eat en France </li> <li>Vous devez arriver sur le site gouvernemenatl de l'agriculture</li> <li>Le fichier que vous devez t\u00e9l\u00e9chargez est au format csv</li> <li>Vous le t\u00e9l\u00e9chargez dans votre espace personnel  sous cette architecture:  SNT/StructuresDeDonnes/incendies2024.csv</li> </ul>"},{"location":"SNT/structuresDeDonnees/#activite-4","title":"Activit\u00e9 4","text":"<p>Votre fichier , sans \u00eatre illisible , n'est pas tr\u00e8s pr\u00e9sentable. C'est un probl\u00e8me d'encodage des caract\u00e8res.</p> <p>Essayer de l'enregistrer au format csv, point virgule , utf8.  Une fois que votre fichier est \"op\u00e9rationnel\", r\u00e9pondre aux questions sur la fiche d'exercices.</p> <p>Exercice </p>"},{"location":"SNT/structuresDeDonnees/#datacenters-et-cout-ecologique","title":"Datacenters et co\u00fbt \u00e9cologique","text":"<p>Les datacenters h\u00e9bergent serveurs et stockent d'\u00e9normes quantit\u00e9s de donn\u00e9es ; ils consomment beaucoup d'\u00e9lectricit\u00e9 pour le fonctionnement et le refroidissement. Cette consommation entra\u00eene des \u00e9missions de CO2 selon la source d'\u00e9nergie, et produit de l'\u00e9quipement obsol\u00e8te (e\u2011waste). Pour r\u00e9duire l'impact : optimiser l'efficacit\u00e9 logicielle (moins de calculs inutiles), mutualiser les ressources (virtualisation), utiliser des centres con\u00e7us pour l'efficacit\u00e9 \u00e9nerg\u00e9tique et privil\u00e9gier les \u00e9nergies renouvelables. Sensibiliser aux bonnes pratiques (supprimer les donn\u00e9es inutiles, limiter les sauvegardes excessives) contribue aussi \u00e0 diminuer l'empreinte \u00e9cologique.</p>"},{"location":"SNT/structuresDeDonnees/#un-cas-decole-larizona","title":"Un cas d'\u00e9cole : L'Arizona","text":"<p>Arizona et Data center </p>"},{"location":"Terminale%20NSI/","title":"Accueil","text":""},{"location":"Terminale%20NSI/#chapitres","title":"Chapitres","text":"<ul> <li>Structures de donn\u00e9es</li> <li>POO</li> <li>R\u00e9cursivit\u00e9</li> <li>Algorithmique :Tri selection </li> <li>Algorithmique :Tri insertion </li> <li>Algorithmique :La dichotomie</li> <li>D\u00e9cidabilit\u00e9</li> <li>Structures de donn\u00e9es</li> <li>R\u00e9cursivit\u00e9</li> <li>Routage</li> <li>S\u00e9curisation des communications</li> <li>Processus</li> <li>SOC</li> <li>Piles</li> <li>Files</li> <li>Arbres</li> <li>Graphes</li> <li>Diviser pour regner</li> <li>Recherche textuelle </li> <li>Base de donn\u00e9es</li> </ul>"},{"location":"Terminale%20NSI/Machine_de_Turing/","title":"Machine de Turing","text":""},{"location":"Terminale%20NSI/Machine_de_Turing/#1-histoire","title":"1. Histoire","text":"<p>La machine de Turing n'est pas vraiment une machine . C'est un mod\u00e8le abstrait destin\u00e9 \u00e0 simuler l'ex\u00e9cution d'un algorithme.</p> <p>La th\u00e8se de Church Turing \u00e9tablit que cette machine est capable de r\u00e9soudre n'importe quel probl\u00e8me algorithmique .</p> <p>Elle a \u00e9t\u00e9 cr\u00e9\u00e9e en 1936, en r\u00e9ponse au Entscheidungsproblem de David Hilbert.</p> <p>Pr\u00e9sentation</p> <p>La machine de Turing peut \u00eatre compar\u00e9e \u00e0 une machine \u00e0 \u00e9crire avec :</p> <ul> <li> <p>Un ruban de longueur infini et sur lequel sont d\u00e9pos\u00e9s des symboles, un par case, qui repr\u00e9sentent les donn\u00e9es.</p> </li> <li> <p>Une t\u00eate de lecture lisant les symboles, les effa\u00e7ant, ou les rempla\u00e7ant. Elle se d\u00e9place \u00e0 droite ou \u00e0 gauche </p> </li> <li> <p>Des instructions consistuant le programme \u00e0 ex\u00e9cuter.</p> </li> </ul> <p>Un listing d'instructions sommaires constitue le programme.</p>"},{"location":"Terminale%20NSI/decidabilite/","title":"La d\u00e9cidabilit\u00e9","text":""},{"location":"Terminale%20NSI/decidabilite/#1-introduction-au-probleme","title":"1. Introduction au probl\u00e8me","text":"<p>On va \u00e9tudier les possibilit\u00e9s et les limites des algorithmes.  Pour cela , on va consid\u00e9rer des programmes qui prennent comme donn\u00e9es d'autres programmes . </p> <p> Exemple </p> <p>On cr\u00e9e un petit programme python, que l'on va executer. On le donne au programme python qui va l'interpr\u00e9ter ,  par exemple en ligne de commande . Le nom du programme est test.py</p> <p>test.py<pre><code>  for i in range (5):\n     print (f\" valeur de i  = {i}\")\n</code></pre> </p>"},{"location":"Terminale%20NSI/decidabilite/#2-la-decidabilite","title":"2. La d\u00e9cidabilit\u00e9","text":"<p>D\u00e9finition</p> <p>On dit d'un probl\u00e8me qu'il est d\u00e9cidable si l'on peut r\u00e9pondre par oui ou par non \u00e0 la question qu'il pose . Dans le cas contraire , le probl\u00e8me est dit ind\u00e9cidable . Si un probl\u00e8me est d\u00e9cidable , il existe un algorithme qui peut le r\u00e9soudre .</p> <p>Rappel : Un algorithme est une suite finie d'instructions </p> <p>Un exemple</p> <p>Existe -t-il un programme qui soit capable de calculer la somme des n premiers entiers positifs, n \u00e9tant pass\u00e9 en param\u00e8tre ?...oui </p> <pre><code>     def somme (n):\n         S = 0\n         for i in range (1,n+1):\n             S = S+i\n         return S\n</code></pre> <p> L'HISTORIQUE</p> <p>Au d\u00e9but du XX\u00e8me si\u00e8cle , David Hilbert, math\u00e9maticien allemand , s'int\u00e9resse aux probl\u00e8mes math\u00e9matiques non r\u00e9solus , ce qui aboutira en 1928 au probl\u00e8me de la d\u00e9cision , ou encore Entscheidungsproblem</p> <p>Le Probl\u00e8me </p> <p> Existe-t-il un algorithme capable de d\u00e9terminer, pour tout \u00e9nonc\u00e9 math\u00e9matique bien formul\u00e9 donn\u00e9 en entr\u00e9e,  si ce dernier est vrai ou faux ?</p> <p>En 1931, Kurt G\u00f6del a r\u00e9gl\u00e9 la question : Il existe des propri\u00e9t\u00e9s math\u00e9matiques non d\u00e9cidables dans n\u2019importe quel syst\u00e8me d\u00e9finissant l\u2019arithm\u00e9tique.</p> <p>`</p>"},{"location":"Terminale%20NSI/decidabilite/#3-le-probleme-de-larret","title":"3. Le probl\u00e8me de l'arr\u00eat","text":"<p>Ce probl\u00e8me , \u00e9tudi\u00e9 par Alan Turing en 1936, est le suivant : </p> <p>On consid\u00e8re une fonction math\u00e9matique qui prend en param\u00e8tre une fonction Python f et un param\u00e8tre e et qui renvoie True si le programme s'arr\u00eate et False sinon. Nous appellons arr\u00eat une telle fonction, en supposant qu'une telle fonction existe bien.</p> <p><pre><code>    def arret(prog, x):\n        if \"prog (x) s'arr\u00eate\":   \n            return True\n        else :\n             return False\n</code></pre> On construit un aute programme qui, boucle \u00e0 l'infini si arret renvoie True et renvoie 'Stop' si arret renvoie False </p> paradoxe<pre><code>    def paradoxe(prog):\n        if arret(paradoxe, prog):   \n            while True:\n                pass\n        else:\n            return 'Stop'\n</code></pre> <p>Explication et contradiction</p> <p>Consid\u00e9rons que le programme pris en param\u00e8tre par la fonction paradoxe est cette m\u00eame fonction param\u00e8tre.</p> <ul> <li> <p>l'appel paradoxe(paradoxe) rentre dans une boucle infinie si arret(paradoxe, paradoxe) est vrai  donc si paradoxe(paradoxe) termine. Donc paradoxe(paradoxe) ne termine pas si paradoxe(paradoxe) termine...</p> </li> <li> <p>l'appel paradoxe(paradoxe) termine si arret(paradoxe, paradoxe) est faux donc si paradoxe(paradoxe) ne termine pas. Donc paradoxe(paradoxe) termine si paradoxe(paradoxe) ne termine pas...</p> </li> </ul> <p>Conclusion</p> <p> On a d\u00e9montr\u00e9 par l'absurde qu'un fonction arr\u00eat ne peut exister puisque l'on est arriv\u00e9 \u00e0 une contradiction .</p>"},{"location":"Terminale%20NSI/decidabilite/#4-un-exercice-au-bac","title":"4. Un exercice au bac  !","text":"SujetCorrection <p>Cette correction est issue du site  Pixees</p> <p></p>"},{"location":"Terminale%20NSI/poo/","title":"La programmation orient\u00e9e objet","text":""},{"location":"Terminale%20NSI/poo/#introduction","title":"Introduction","text":"<p>Le titre du chapitre peut faire peur mais pourtant, sans le savoir, vous flirtez constamment depuis le d\u00e9but de la premi\u00e8re avec ce concept.  Historiquement le paradigme objet est apparu dans les ann\u00e9es 60 mais a \u00e9t\u00e9 d\u00e9velopp\u00e9 s\u00e9rieusement \u00e0 partir des ann\u00e9es 70 avec le langage smalltalk. Ce paradigme est aujourd\u2019hui largement r\u00e9pandu parmi les langages ayant le plus de succ\u00e8s. Mais qu\u2019est-ce donc ?  L\u2019id\u00e9e est que l\u2019utilisateur puisse utiliser des objets complexes de fa\u00e7on tr\u00e8s simple.  Prenons exemple avec les listes. Vous savez ajouter, enlever, modifier\u2026un \u00e9l\u00e9ment d\u2019une liste de fa\u00e7on ais\u00e9e.  Le langage python a mis \u00e0 notre disposition un objet, les listes, tr\u00e8s pratique et facile \u00e0 utiliser. Bien \u00e9videmment, il a fallu construire cet objet et l\u00e0, ce n\u2019est plus aussi simple. On va voir comment sur des exemples simples, on peut construire un objet. On va avoir besoin des notions de Classes, attributs, m\u00e9thodes.</p>"},{"location":"Terminale%20NSI/poo/#classes","title":"Classes","text":"<p>Pour cr\u00e9er une classe d\u2019objets, il faut pr\u00e9alablement d\u00e9finir cette classe. Supposons que nous g\u00e9rions un parc de voitures pour lesquelles nous voudrions connaitre la couleur, la marque et l\u2019ann\u00e9e de mise en circulation.</p> <p>On va tout d\u2019abord cr\u00e9er l\u2019enveloppe de ces objets \u00e0 l\u2019aide du mot cl\u00e9 class. <pre><code> class Voiture :\n     \"\"\" Une classe pour repr\u00e9senter des voitures \n     \u00e0 l'aide  de leur marque , ann\u00e9e , couleur\n     \"\"\"\n     pass\nv= Voiture()\ntype(v)\n\n&lt;class '__main__.Voiture'&gt;\n</code></pre></p> <p>Le nom d'une classe commence toujours par une majuscule</p>"},{"location":"Terminale%20NSI/poo/#methode-constructeur-attributs","title":"M\u00e9thode constructeur , attributs.","text":"<p>On a une enveloppe vide pour l'instant. Dans un premier temps, on va d\u00e9finir la m\u00e9thode constructeur qui a une syntaxe tr\u00e8s particuli\u00e8re.</p> <p><pre><code>def __init__ (self, couleur, marque, ann\u00e9e):\n    self.c = couleur\n    self.m = marque\n    self.a = ann\u00e9e \n</code></pre> Une petite explication ?</p> <p>Le nom de la m\u00e9thode constructeur sera toujours init. Ce nom identifiable permet \u00e0 cette m\u00e9thode d\u2019\u00eatre ex\u00e9cut\u00e9e d\u00e8s la cr\u00e9ation d\u2019une instance (ou objet). Elle a ici quatre param\u00e8tres et au minimum en aura un : self Ce param\u00e8tre d\u00e9signe l\u2019instance (l'objet) \u00e0 laquelle la m\u00e9thode sera appliqu\u00e9e. Cela deviendra clair avec quelques exemples. Les autres param\u00e8tres sont facultatifs et d\u00e9signent les attributs d\u2019instance . Ici , ils ne sont pas d\u00e9finis par d\u00e9faut. </p> <p>R\u00e9sum\u00e9</p> <p>Pour d\u00e9finir une classe, il faut tout d'abord lui donner un nom, avec une majuscule . On pr\u00e9c\u00e8dera ce nom du mot r\u00e9serv\u00e9 class</p> <p>On d\u00e9finit ensuite la m\u00e9thode constructeur dont le but est d' affecter les caract\u00e9ristiques voulues  \u00e0 chaque objet (instance) de la classe que l'on va cr\u00e9er. Elle s'ex\u00e9cute automatiquement. Ici chaque objet recevra une marque, une couleur et une ann\u00e9e . c, m, a sont les attributs associ\u00e9s \u00e0 cette classe .Couleur , marque, ann\u00e9e les arguments associ\u00e9s \u00e0 chaque objet.</p> <p>Premier exemple</p> <pre><code>class Voiture:\n    def __init__ (self, couleur, marque, ann\u00e9e):\n        self.c = couleur\n        self.m = marque\n        self.a = ann\u00e9e \n\nv= Voiture('rouge','Fiat',2015)\n\nv.c     # v est une instance de la classe Voiture et remplace \"self\" \n'rouge'\nv.m\n'Fiat'\n</code></pre> <p>Remarques sur les attributs</p> <p>Les valeurs des attributs sont modifiables . Par exemple, si l'on repeint la voiture il suffit d'\u00e9crire v.c='bleue' pour que l'argument associ\u00e9 \u00e0 la couleur de l'objet soit bleue.</p> <p>Deuxi\u00e8me remaque : On aurait pu ne pas noter les attributs en argument de la m\u00e9thode constructeur. <pre><code>  class Voiture:\n       def __init__ (self):\n           pass\n  v= Voiture()\n  v.couleur = 'rouge'\n</code></pre> Plus fr\u00e9quent, les arguments des attributs sont d\u00e9finis par d\u00e9faut  <pre><code>class Voiture:\n    def __init__ (self, couleur = 'rouge', marque= 'Fiat', ann\u00e9e = 2015):\n        self.c = couleur\n        self.m = marque\n        self.a = ann\u00e9e \n\nv= Voiture()\n</code></pre> On a ici une Fiat rouge de 2015.</p>"},{"location":"Terminale%20NSI/poo/#les-methodes","title":"Les m\u00e9thodes","text":"<p>Les m\u00e9thodes ne sont ni plus ni moins que des fonctions d\u00e9finies \u00e0 l'int\u00e9rieur d'une classe. Elles ne peuvent \u00eatre utilis\u00e9es qu'avec des objets de la classse dont elles d\u00e9pendent.</p> <p>Vous connaissez toutes et tous la m\u00e9thode append  qui s'appliquent aux objets de la classe Liste.</p> <p>Cr\u00e9eons une m\u00e9thode qui \"repeind\" la voiture.</p> <pre><code>     class Voiture:\n           def __init__ (self, couleur, marque, ann\u00e9e ):\n               self.c = couleur\n               self.m = marque\n               self.a = ann\u00e9e \n\n           def peindre (self, nouvelle_couleur):\n               self.c = nouvelle_couleur\n\n     v= Voiture('rouge', 'Fiat', 2015)\n     print (f\" On a une {v.m} de couleur {v.c}\")\n     #On a une Fiat de couleur rouge\n     v.peindre ('jaune')\n     print (f\" On a une {v.m} de couleur {v.c}\")\n     #On a une Fiat de couleur jaune\n</code></pre>"},{"location":"Terminale%20NSI/poo/#une-methode-particuliere","title":"Une m\u00e9thode particuli\u00e8re","text":"<p>On a d\u00e9j\u00e0 vu la m\u00e9thode construteur (def__init__) on peut aussi la m\u00e9thode str Cette m\u00e9thode est utilis\u00e9e pour permettre un affichage compr\u00e9hensible des objets \u00e0 l'aide la fonction print</p> <p>Regardons la diff\u00e9rence d'affichage</p> <p><pre><code>     class Voiture:\n           def __init__ (self, couleur, marque, ann\u00e9e ):\n               self.c = couleur\n               self.m = marque\n               self.a = ann\u00e9e \n\n     v= Voiture('rouge', 'Fiat', 2015)\n     print(v)\n     #&lt;__main__.Voiture object at 0x1256ae0&gt;\n</code></pre> On est bien avanc\u00e9 ...On a vu plus haut qu'avec un print, on peut afficher les caract\u00e9ristqiues de l'objet. Mais on peut cr\u00e9er une m\u00e9thode qui automatise cet affichage </p> <p>Le truc en plus</p> <pre><code> class Voiture:\n       def __init__ (self, couleur, marque, ann\u00e9e ):\n           self.c = couleur\n           self.m = marque\n           self.a = ann\u00e9e \n\n       def  __str__(self):\n           return f\" On a une {self.m} de couleur {self.c}\"\n\n v= Voiture('rouge', 'Fiat', 2015)\n print(v)\n #On a une Fiat de couleur rouge \n</code></pre> <p>C'est quand m\u00eame plus explicite </p>"},{"location":"Terminale%20NSI/poo/#un-peu-hs-mais-de-bonne-pratique","title":"Un peu HS , mais de  bonne pratique","text":"<p>Vous avez vu que l'on peut modifier l'argument d'un attribut, on l'a fait au dessus avec la couleur. Ce n'est pas une pratique usuelle, on pr\u00e9ferera cr\u00e9er une m\u00e9thode qui permettra de changer la valeur d'un attribut, comme on l'a fait avec la m\u00e9thode peindre . La syntaxe de ces m\u00e9thodes est assez uniforme et s'\u00e9crit sous la forme setXXX Une telle m\u00e9thode permet de v\u00e9rifier que l'argument affect\u00e9 \u00e0 l'attribut est bien valable .</p> <p>Un exemple</p> <pre><code> class Voiture:\n    def __init__ (self, couleur, marque, ann\u00e9e ):\n        self.c = couleur\n        self.m = marque\n        self.a = ann\u00e9e \n\n    def  __str__(self):\n           return f\" On a une {self.m} de couleur {self.c}\"\n\n    def setCouleur(self,nvle_couleur):\n        if self.m =='Ferrari' and nvle_couleur not in ('jaune', 'noire', 'rouge'):\n            print (f\" immpossible , on n'est pas chez Fiat ici\")\n\n        self.c = nvle_couleur\n    def getCouleur(self):\n        return f\" La couleur de la voiture est {self.c}\"\n\n\n v= Voiture('rouge', 'Ferrari', 2015)\n print(v)\n\n v.setCouleur('jaune') \n v.getCouleur()\n # On a une Ferrari de couleur rouge # affichage apr\u00e8s le print(v)\n\n #' La couleur de la voiture est jaune'  (affichage apr\u00e8s l'appel de getCouleur)\n</code></pre> <p>Les m\u00e9thodes qui permettent de modifier les valeurs des attributs sont appel\u00e9es des Setters  ou mutateurs en fran\u00e7ais et celles qui permettent les affichages , des Getters, ou accesseurs en farn\u00e7ais .</p>"},{"location":"Terminale%20NSI/rechercheTextuelle/","title":"Recherche textuelle","text":""},{"location":"Terminale%20NSI/rechercheTextuelle/#1-la-problematique","title":"1. La probl\u00e9matique","text":"<p>Ici, on va chercher une sous chaine de caract\u00e8res dans une chaine plus grande .  Les applications de cette recherche sont multiples mais une des plus importante est appliqu\u00e9e \u00e0 la bioinformatique .</p> <p></p> <p>On va chercher une sous chaine dans un brin d'ADN</p> <p>Par exemple, nous voulons rechercher la chaine ACG dans la chaine CAAGCGCACAAGACGCGGCAGACCTTCGTTATAGGCGATGATTTCGAACCTACTAGTGGGTCTCTTAGGCCGAGCGGTTCCGAGAGATAGTGAAAGATGGCTGGGCTGTGAAGGGAAGGAGTCGTGAAAGCGCGAACACGAGTGTGCGCAAGCGCAGCGCCTTAGTATGCTCCAGTGTAGAAGCTCCGGCGTCCCGTCTAACCGTACGCTGTCCCCGGTACATGGAGCTAATAGGCTTTACTGCCCAATATGACCCCGCGCCGCGACAAAACAATAACAGTTTGCTGTATGTTCCATGGTGGCCAATCCGTCTCTTTTCGACAGCACGGCCAATTCTCCTAGGAAGCCAGCTCAATTTCAACGAAGTCGGCTGTTGAACAGCGAGGTATGGCGTCGGTGGCTCTATTAGTGGTGAGCGAATTGAAATTCGGTGGCCTTACTTGTACCACAGCGATCCCTTCCCACCATTCTTATGCGTCGTCTGTTACCTGGCTTGGCAT</p> <p>Pas de doute, il va falloir un peu de m\u00e9thode, m\u00eame si naturellement on a une id\u00e9e simple...</p>"},{"location":"Terminale%20NSI/rechercheTextuelle/#2-lalgorithme-naif","title":"2. L'algorithme na\u00eff","text":"<p>Un peu bourrin mais</p> <p>Intuitivement, on va placer le motif (sous chaine) au d\u00e9but de la chaine. On compare les premi\u00e8res lettres . Si elles sont \u00e9gales , on passe \u00e0 la lettre suivante , sinon , on d\u00e9cale le motif en le pla\u00e7ant sous la deuxi\u00e8me lettre et ainsi de suite; \u00e7a marche . </p>"},{"location":"Terminale%20NSI/rechercheTextuelle/#lalgorithme-naif-en-python","title":"L'algorithme na\u00eff en python","text":"<pre><code>def rechercheNa\u00efve(mot, motif):\n    \"\"\" Recherche d'un motif dans une chaine de caract\u00e8res\n    entr\u00e9es : Deux chaines de caract\u00e8res, type str\n    sorties : Une liste contenant les index o\u00f9 se trouve le motif\n    \"\"\"\n    n= len(mot)\n    t= len (motif)\n    res =[]\n    for i in range (n-t+1):\n        j = 0\n        while j&lt;t and mot[i+j]==motif[j]:\n            j= j+1\n        if j == t:\n            res.append(i)\n    return res\nassert(rechercheNa\u00efve('cgtatagtata', 'ta') ==[2,4,7,9])\nassert(rechercheNa\u00efve('cgtatagtata', 'zzzzz') ==[])\n</code></pre> <p>Testons !</p> <p>Testons le fonctionnement de cet algorithme </p> <p>lien</p>"},{"location":"Terminale%20NSI/rechercheTextuelle/#3-lalgorithme-de-boyer-moore-horspool","title":"3. L'algorithme de Boyer Moore Horspool","text":"<p>Le co\u00fbt de l'algorithme pr\u00e9c\u00e9dent peut vite croitre. il est de l'ordre au maximum de (n-t+1)*t soit quadratique. Pour l'am\u00e9liorer, l'id\u00e9e va \u00eatre de ne pas tester toutes les positions tout en \u00e9tant sur de n'en oublier aucune.</p> <p>Exemple d'am\u00e9lioration</p> <p>Voici  un fa\u00e7on d'am\u00e9liorer cet algorithme  </p> <p>Les deux id\u00e9es qui font progresser la recherche :</p> <p>Id\u00e9e N 1</p> <p>1.Ici, on remarque que l\u2019alignement se fait \u00e0 part de      la derni\u00e8re lettre.      En fait, on compare d\u2019abord la derni\u00e8re lettre   du motif.  Si elle ne correspond pas , pas la peine de regarder les autres. Il nous suffit alors de consid\u00e9rer les deux cas suivants :</p> <p>Cas 1 </p> <p></p> <pre><code> La derni\u00e8re lettre ne correspond pas  : \n On cherche un \u00e9ventuel B en partant de la droite \n dans le motif pour aligner .\n  Il n'y en a pas , on d\u00e9cale le motif pour \n  le placer sous la premi\u00e8re lettre apr\u00e8s B\n</code></pre> <p>Cas 2</p> <p></p> <pre><code>  La derniere lettre ne correspond pas . \n  On va chercher un A dans le motif  et on le trouve . \n  On vient aligner ce A sous celui du mot. Le d\u00e9calage est de 3.\n</code></pre> <p>   idee N2. </p> <p>La deuxi\u00e8me id\u00e9e est de pr\u00e9traiter ces sauts . Le mieux est de partir d'un exemple  </p> <p>On choisit le motif  ACTCAGGT</p> A C G T 0 1 0 2 0 1 2 3 0 1 2 4 4 3 2 5 4 3 5 2 6 4 3 6 2 7 4 3 6 7 8 8 3 6 7 <p>Le code du pr\u00e9traitement</p> <pre><code> def table(m) : #m est le motif \u00e0 traiter\n        d=[{} for i in range (len(m))]\n        for j in range (len(m)):\n            for k in range(j):\n                d[j][m[k]]  = k\n        return d \n</code></pre> <p>Le d\u00e9calage et son dictionnaire </p> <p>On va utiliser ce code pour \u00e9tablir la table de d\u00e9calage . d est la table obtenue pr\u00e9c\u00e9demment, c est le caract\u00e8re obtenu \u00e0 l'indice j du motif.</p> <p>Le code d\u00e9calage</p> <pre><code> def decalage(d, j,c):\n      if c in d[j]:\n         return j-d[j][c]  # il y a une cl\u00e9 'c'\u00e0 l'indice j\n      else:\n         return j+1  # la lettre c n'est pas \n            #pr\u00e9sente \u00e0 gauche dans le motif,\n             # on se met en j+1\n</code></pre> <p> L'algorithme de Boyer Moore </p> <ul> <li>On cr\u00e9e la table de d\u00e9calage</li> <li>On parcourt le mot en pla\u00e7ant la premi\u00e8re lettre du motif sous la premi\u00e8re lettre du mot</li> <li>On s'arretera \u00e0 l'indice len(mot) -len(motif)</li> <li>On compare \u00e0 partir de la droite</li> </ul> <p><code>python    def BM (motif, mot):       d = table(motif)       i = 0       while i &lt;= len(mot)-len(motif):           k = 0           for j in range (len(motif)-1 ,-1,-1):                if mot[i+j] != motif[j]:                     k = decalage(d,j,mot[i+j])                     break           if k  == 0 :               print(\"l'indice\",i,\" est solution\")           k = 1           i += k</code></p> <p>Le script global</p> <pre><code>    def table(m) : #m est le motif \u00e0 traiter\n         d=[{} for i in range (len(m))]\n         for j in range (len(m)):\n             for k in range(j):\n                d[j][m[k]]  = k\n     return d \n\n    def decalage(d, j,c):\n         if c in d[j]:\n             return j-d[j][c]  # il y a une cl\u00e9 'c'\u00e0 l'indice j\n         else:\n             return j+1  # la lettre c n'est pas \n                    #pr\u00e9sente \u00e0 gauche dans le motif,\n                     # on se met en j+1\n\n    def BM (motif, mot):\n      d = table(motif)\n      i = 0\n      while i &lt;= len(mot)-len(motif):\n          k = 0\n          for j in range (len(motif)-1 ,-1,-1):\n              if mot[i+j] != motif[j]:\n                  k = decalage(d,j,mot[i+j])\n                  break\n          if k  == 0 :\n              print(\"l'indice\",i,\" est solution\")\n              k = 1\n          i += k\n\n    BM('gta','gtagatgtaggtaggtattagta')\n</code></pre> <p></p>"},{"location":"Terminale%20NSI/recursivite/","title":"Recursivit\u00e9","text":""},{"location":"Terminale%20NSI/recursivite/#introduction","title":"Introduction","text":"<p>Jusqu'\u00e0 ce jour, votre fa\u00e7on de programmer est dite it\u00e9rative : L'ordinateur ex\u00e9cute les instructions les unes apr\u00e8s les autres, les r\u00e9p\u00e9tiotions sont g\u00e9r\u00e9es \u00e0 l'aide des boucles while, for...</p> <pre><code>   On parle aussi de programmation imp\u00e9rative.\n</code></pre> <p>On va d\u00e9couvrir une autre fa\u00e7on de propgrammer, la r\u00e9cursivit\u00e9 .</p>"},{"location":"Terminale%20NSI/recursivite/#principe-de-la-recursivite","title":"Principe de la r\u00e9cursivit\u00e9","text":"<p>Les deux fondamentaux</p> <ul> <li>Il faut une condition d'arr\u00eat</li> <li>Il faut que la fonction s'appelle elle m\u00eame.</li> </ul> <p>Premiers exemples</p> <ol> <li> </li> </ol> <p>Programme iteratif</p> <pre><code> def somme (n):\n    S= 0\n    for i in range(n+1):\n      S = S+i\n    return S\n</code></pre> <p> Programme r\u00e9cursif</p> <pre><code> def somme_rec(n):\n    if n == 0:\n       return 0\n    return somme_rec (n-1) +n\n</code></pre> <ol> <li> </li> </ol> <p>Programme iteratif</p> <pre><code> def puissance (a,n):\n    return a**n\n</code></pre> <p> Programme r\u00e9cursif</p> <pre><code> def puissance_rec(a,n):\n    if n == 0:\n       return 1\n    return puissance_rec(a,n-1)*a\n</code></pre> <p>Pour bien comprendre le fonctionnement des programmes, vous pouvez utiliser le site python tutor</p>"},{"location":"Terminale%20NSI/recursivite/#somme-des-n-premiers-entiers","title":"Somme des n premiers entiers","text":""},{"location":"Terminale%20NSI/recursivite/#puissances-dun-entier","title":"Puissances d'un entier","text":""},{"location":"Terminale%20NSI/recursivite/#fibonnaci-et-la-limite-de-la-recursivite","title":"Fibonnaci et la limite de la r\u00e9cursivit\u00e9","text":"<p>En math\u00e9matiques, la suite de Fibonacci est une suite d'entiers dans laquelle chaque terme est la somme des deux termes qui le pr\u00e9c\u00e8dent. Elle commence par les termes 0 et 1.</p> <p>On a donc fibo(0) =0, fibo(1) = 1, fibo(2) = 1 et fibo(n) = fibo(n-1) +fibo(n-2) </p> <p>On va \u00e9crire une fonction r\u00e9cursive qui prend en param\u00e8tre un entier n (correspondant au dernier indice de la suite \u00e0 calculer) et qui renvoie le terme de rang n de la suite de Fibonacci.</p> <p>Il nous faut trouver, pour programmer la fonction r\u00e9cursive : </p> <ul> <li> <p>La formule de recursivit\u00e9 (r\u00e9currence pour les matheux) liant le terme de rang et son ou ses pr\u00e9c\u00e9dents.</p> </li> <li> <p>Une issue de secours pour \u00eatre sur de terminer le programme.</p> <p>Programme iteratif</p> <pre><code> def fibo(n):    \n     a = 0\n     b = 1\n     for i in range(2,n+1):\n         c= a+b\n         a = b\n         b = c\n     return b\n\n\n assert(fibo(4) == 3)\n</code></pre> <p>Programme recursif</p> <pre><code>def fibo_rec(n):\n    if n == 0 or n == 1:\n       return n\n    return fibo_rec(n-1)+ fibo_rec(n-2)\n</code></pre> </li> </ul> <p>Examinons ce qu'il se pense avec l'appel de fibo(4) : </p> <p>La fonction fibo_rec est appel\u00e9e plusieurs fois avec la m\u00eame valeur. Cela ne va -t-il poser un probl\u00e8me pour des valeurs de n plus grande ?</p> <p>D\u00e9passement des capacit\u00e9s de calcul</p> <p>Un petit script permet de calculer le nombre de fois o\u00f9 la fonction fibo_rec(15) appelle fibo_rec(2) :...150 !   On trouvera une solution \u00e0 ce probl\u00e8me en fin d'ann\u00e9e avec la programmation dynamique !   </p>"},{"location":"Terminale%20NSI/routage/","title":"Cours \u2014 Routage, RIP, OSPF (avec rappel IPv4 et masque)","text":""},{"location":"Terminale%20NSI/routage/#rappel-adresse-ipv4","title":"Rappel \u2014 Adresse IPv4","text":"<ul> <li>IPv4 = 32 bits, g\u00e9n\u00e9ralement \u00e9crit en notation d\u00e9cimale point\u00e9e : a.b.c.d (ex. 192.168.1.10).</li> <li>Chaque octet = 8 bits \u2192 valeurs 0\u2013255.</li> <li> <p>Adresse =partie r\u00e9seau (\u00e0 gauche)+ identifiant d\u2019un h\u00f4te sur un r\u00e9seau </p> </li> <li> <p>Notation CIDR utilis\u00e9 : Exemple 192.168.1.1 /24 signifie que les 24 premiers octects servent \u00e0 coder l'adresse du r\u00e9seau .</p> </li> </ul>"},{"location":"Terminale%20NSI/routage/#masque-de-sousreseau-cidr","title":"Masque de sous\u2011r\u00e9seau (CIDR)","text":"<ul> <li>Masque = 32 bits indiquant la partie r\u00e9seau : ex. /24 \u00e9quivaut \u00e0 255.255.255.0.</li> <li>Notation CIDR : adresse/longueur (ex. 192.168.1.0/24).</li> <li>Calculs utiles :<ul> <li>Nombre d\u2019adresses dans un pr\u00e9fixe /N = \\({2}^{32\u2212N}\\).</li> <li>Nombre d\u2019h\u00f4tes utilisables \u2248 \\({2}^{32\u2212N} \u2212 2\\) (r\u00e9seau + broadcast) </li> </ul> </li> <li>Exemple : /26 \u2192 \\({2}^{32\u221226}\\)=64 adresses, 62 h\u00f4tes utilisables, masque 255.255.255.192.</li> </ul>"},{"location":"Terminale%20NSI/routage/#routage-principes","title":"Routage \u2014 principes","text":"<ul> <li>But : faire transiter paquets d\u2019un r\u00e9seau source vers un r\u00e9seau destination via routeurs.</li> <li>Table de routage : contient entr\u00e9es (r\u00e9seau de destination, masque, next hop/interface, m\u00e9trique).</li> <li>Routage statique : administrateur configure manuellement. Simple mais peu scalable et non r\u00e9silient.</li> <li>Routage dynamique : protocoles partagent informations et b\u00e2tissent tables automatiquement (RIP, OSPF, BGP, etc.).</li> </ul>"},{"location":"Terminale%20NSI/routage/#rip-routing-information-protocol","title":"RIP (Routing Information Protocol)","text":"<ul> <li>Famille : protocole vectoriel de distance.</li> <li>Versions : RIP v1 (classful), RIP v2 (classless, supports mask, auth).</li> <li>M\u00e9trique : nombre de sauts (hop count). Maximum = 15 (16 = inaccessible).</li> </ul> <p>Principes</p> <pre><code>Chaque routeur transmet \u00e0 ses voisins les informations dont il dispose :\nLes adresses de ses propres voisins, les informations qu\u2019il a d\u00e9j\u00e0 \nre\u00e7ues. Le routeur indique aussi la distance (en nombre de sauts) qui\n le s\u00e9pare d\u2019une machine donn\u00e9e, soit combien de routeurs il faut\ntraverser pour atteindre une machine en passant par lui. Le protocole RIP permet donc aux routeurs  \nd\u2019\u00e9changer un couple (appel\u00e9 vecteur de distance ) adresse distance\n\n Apr\u00e8s une phase d\u2019initialisation :\n        \u2022 Un routeur peut d\u00e9couvrir une route vers un sous r\u00e9seau inconnu : Il l\u2019inscrit dans sa table.\n\n        \u2022 Un routeur d\u00e9couvre une route plus courte vers un sous r\u00e9seau d\u00e9j\u00e0 connu. Il efface\n          l\u2019ancienne route et ajoute la route plus courte.\n\n        \u2022 Un routeur re\u00e7oit une nouvelle route plus longue qu\u2019un d\u00e9j\u00e0 connue. Il l\u2019ignore\n\n        \u2022 Un routeur re\u00e7oit une route existante mais plus longue vers un routeur passant par le m\u00eame\n          voisin. Cela induit un probl\u00e8me sur le r\u00e9seau. La table est mise \u00e0 jour.\n</code></pre> <ul> <li>Avantages : Simple \u00e0 configurer, adapt\u00e9 aux petits r\u00e9seaux.</li> <li>Limites :   Convergence lente, boucle possible, limite de 15 sauts, inefficace pour grands r\u00e9seaux.</li> </ul>"},{"location":"Terminale%20NSI/routage/#ospf-open-shortest-path-first","title":"OSPF (Open Shortest Path First)","text":"<ul> <li>Famille : protocole\u00e0 \u00e9tat des liens.</li> <li>M\u00e9trique : co\u00fbt (g\u00e9n\u00e9ralement fonction inverse de la bande passante).            Formule g\u00e9n\u00e9ralement utilis\u00e9e : \\(\\frac{10^8}{d\u00e9bit}\\) </li> </ul> d\u00e9bit co\u00fbt 10 mbits 10 100 mbits 1 1 Gbits 0.1 10 Gbits 0.01 <p>Principes </p> <p>\u2022 Les routeurs sont r\u00e9partis en zone et ne peuvent communiquer qu\u2019avec les routeurs de leur zone, sauf un routeur de la zone , appel\u00e9 ABR (Area Border Router).</p> <p>\u2022 Toutes les zones sont reli\u00e9es \u00e0 une zone centrale, la Zone 0, appel\u00e9 BACKBONE.</p> <p>\u2022 La communication entre les diff\u00e9rentes zones et la Backbone se fait par l\u2019interm\u00e9diaire du routeur ABR.</p> <ul> <li> <p>Chaque routeur choisit une adresse unique parmi les adresses de son sous r\u00e9seau.</p> </li> <li> <p>Les routeurs envoient des messages \u00e0 toutes les interfaces r\u00e9seaux de leur zone. Ces messages contiennent l\u2019identificateur du routeur, le num\u00e9ro de zone et la liste des voisins qu\u2019il connait d\u00e9j\u00e0.</p> </li> <li> <p>Quand un routeur re\u00e7oit ce type de message, il v\u00e9rifie s\u2019il conna\u00eet d\u00e9j\u00e0 l\u2019exp\u00e9diteur. Dans ce cas, il secontente d\u2019envoyer un accus\u00e9 de r\u00e9ception, validant le bon fonctionnement de la liaison. Dans le cas contraire, il transmet les informations dont il dispose. On parle de messages LSA ( Link state advertisement)</p> </li> </ul> <p>*Apr\u00e8s plusieurs \u00e9changes de messages, les routeurs d\u2019une zone doivent avoir une vision compl\u00e8te de leur zone.</p> <ul> <li>L\u2019ensemble de cette premi\u00e8re phase est appel\u00e9 diffusion ou inondation (flooding)</li> </ul> <p>*Une fois que chaque routeur conna\u00eet la topologie de sa zone, il lui faut \u00e9tablir la meilleure route pour acc\u00e9der \u00e0 n\u2019importe quel autre routeur de sa zone. Ceci fait, il inscrit ces donn\u00e9es dans sa table de routage.</p> <p>*Le routeur ABR aura une autre sp\u00e9cificit\u00e9. L\u2019algorithme lui permettra de communiquer \u00e0 toutes les autres zones, via la Backbone, les meilleures routes pour atteindre chaque sous r\u00e9seau d\u2019une zone</p> <ul> <li>Avantages :<ul> <li>Convergence rapide, meilleure \u00e9chelle, routage optimis\u00e9 selon co\u00fbt, pas de limite artificielle de sauts.</li> </ul> </li> <li>Complexit\u00e9 :<ul> <li>Plus de ressources CPU/m\u00e9moire, configuration plus avanc\u00e9e (areas, authentication, timers).</li> </ul> </li> </ul>"},{"location":"Terminale%20NSI/routage/#comparaison-rapide-rip-vs-ospf","title":"Comparaison rapide RIP vs OSPF","text":"<ul> <li>Type : RIP = distance\u2011vector ; OSPF = link\u2011state.</li> <li>M\u00e9trique : RIP = nombre de sauts ; OSPF = co\u00fbt bas\u00e9 sur bande passante.</li> <li>Scalabilit\u00e9 : RIP limit\u00e9 ; OSPF adapt\u00e9 aux r\u00e9seaux d\u2019entreprise.</li> <li>Convergence : RIP lente ; OSPF rapide.</li> <li>Complexit\u00e9 : RIP simple ; OSPF plus complexe.</li> </ul>"},{"location":"Terminale%20NSI/routage/#exemple-subdivision-dun-24-en-26","title":"Exemple \u2014 subdivision d\u2019un /24 en /26","text":"<p>R\u00e9seau de d\u00e9part : 192.168.1.0/24 (masque 255.255.255.0) \u2014 256 adresses (254 h\u00f4tes utilisables).</p> <p>D\u00e9coupage en /26 (chaque /26 = 64 adresses, 62 h\u00f4tes utilisables) \u2014 on obtient 4 sous\u2011r\u00e9seaux :</p> <ul> <li> <p>192.168.1.0/26  </p> <ul> <li>Plage d\u2019adresses : 192.168.1.0 \u2014 192.168.1.63  </li> <li>R\u00e9seau : 192.168.1.0  </li> <li>Diffusion (broadcast) : 192.168.1.63  </li> <li>H\u00f4tes utilisables : 192.168.1.1 \u2014 192.168.1.62 (62 adresses)</li> </ul> </li> <li> <p>192.168.1.64/26  </p> <ul> <li>Plage d\u2019adresses : 192.168.1.64 \u2014 192.168.1.127  </li> <li>R\u00e9seau : 192.168.1.64  </li> <li>Broadcast : 192.168.1.127  </li> <li>H\u00f4tes utilisables : 192.168.1.65 \u2014 192.168.1.126</li> </ul> </li> <li> <p>192.168.1.128/26  </p> <ul> <li>Plage d\u2019adresses : 192.168.1.128 \u2014 192.168.1.191  </li> <li>R\u00e9seau : 192.168.1.128  </li> <li>Broadcast : 192.168.1.191  </li> <li>H\u00f4tes utilisables : 192.168.1.129 \u2014 192.168.1.190</li> </ul> </li> <li> <p>192.168.1.192/26  </p> <ul> <li>Plage d\u2019adresses : 192.168.1.192 \u2014 192.168.1.255  </li> <li>R\u00e9seau : 192.168.1.192  </li> <li>Broadcast : 192.168.1.255  </li> <li>H\u00f4tes utilisables : 192.168.1.193 \u2014 192.168.1.254</li> </ul> </li> </ul> <p>Sch\u00e9ma ASCII simple :</p> <p>[192.168.1.0/24] |\u2014 192.168.1.0/26 |\u2014 192.168.1.64/26 |\u2014 192.168.1.128/26 |\u2014 192.168.1.192/26</p>"},{"location":"Terminale%20NSI/algorithmique/algoArbre/","title":"Algorithme sur les arbres","text":""},{"location":"Terminale%20NSI/algorithmique/algoArbre/#1-implementation-dun-arbre-a-laide-dune-classe","title":"1. Impl\u00e9mentation d'un  arbre \u00e0 l'aide d'une classe","text":"<p>On va tr\u00e8s simplement cr\u00e9er une classe Noeud qui aura trois attributs : v, g et d, repr\u00e9sentant respectivement la valeur du noeud(None par d\u00e9faut) , son sous arbre droit ( None par d\u00e9faut ) et son sous arbre gauche (None par d\u00e9faut) On va d\u00e9finir trois m\u00e9thodes, en plus de la m\u00e9thode constructeur:</p> <ul> <li>est_vide : Renvoie un bool\u00e9en </li> <li>est_feuille : Renvoie un bool\u00e9en </li> <li>taille : Renvoie la taille de l'arbre   (plus fr\u00e9quent sous forme de fonction que de m\u00e9thode) </li> </ul> <pre><code>class Noeud :\n    def __init__ (self,valeur= None , gauche = None,droite = None):\n        self.v = valeur\n        self.g = gauche\n        self.d = droit\n\n    def est_vide(self):\n        return self.valeur == None \n\n    def est_feuille(self):\n        return self.g== None and self.d == None \n\n\n    def taille(self):\n        if self is None :\n            return 0\n        elif self.est_une_feuille():\n            return 1\n        elif self.d is None :\n            return 1+self.g.taille()\n        elif self.g is None :\n            return 1+self.d.taille()\n        else :\n             return 1+self.g.taille()+self.d.taille()\n</code></pre> <p> Attention danger ! </p> <p>V\u00e9rifier bien si vous \u00eates en pr\u00e9sence d'une m\u00e9thode ou d'une fonction pour la taille ou la hauteur !  La hauteur est plus compliqu\u00e9e en impl\u00e9menter en tant que m\u00e9thode </p> <p>Dans le cas d'une fonction , on obtient , pour la taille, avec un param\u00e8tre arbre de la classe Noeud:</p> <pre><code>   def taille (arbre):\n       if arbre is None :\n           return 0\n       return 1+ taille(arbre.g)+ taille (arbre.d)\n</code></pre> <p>Et pour la hauteur </p> <pre><code>   def hauteur (arbre):\n       if arbre is None :\n           return 0 # On peut rencontrer -1\n       return 1+ max(hauteur(arbre.g),hauteur(arbre.d))\n</code></pre> <p>Remarque</p> <ul> <li> <p>Soit n la taille d'un arbre . Alors sa hauteur h v\u00e9rifie :</p> <p>log<sub>2</sub>(n) &lt;= h&lt;= n-1</p> </li> <li> <p>Soit h la hauteur d'un arbre . Alrs sa taille n v\u00e9rifie :</p> <p>h &lt;= n &lt;= \\(2^{h}-1\\)</p> </li> </ul> <p>Dans le cas o\u00f9 la taille d'un arbre est \u00e9gale \u00e0 \\(2^{h}-1\\), on dit que l'arbre est complet.</p>"},{"location":"Terminale%20NSI/algorithmique/algoArbre/#2-parcours-dun-arbre","title":"2. Parcours d'un arbre","text":"<p> source : wikipedia</p>"},{"location":"Terminale%20NSI/algorithmique/algoArbre/#a-parcours-en-largeur","title":"a. Parcours en largeur","text":"<p>Il s'agit ici de parcourir l'arbre ligne par ligne de la gauche     vers la droite.</p> <p>Parcours largeur : 1 2 3 4 5 6 7 8 9</p> <pre><code>def ParcoursLargeur(arbre):\nif arbre is None:\n    return \nfile = []\nfile.append(arbre)\n\nwhile(len(file) &gt; 0):\n    # afficher et retirer le premier \u00e9l\u00e9ment\n    print(file[0].v)\n    noeud = file.pop(0)\n\n    # ajouter l'enfant gauche de l'\u00e9l\u00e9ment retir\u00e9\n    if noeud.g is not None:\n        file.append(noeud.g)\n\n    # ajouter l'enfant droit de l'\u00e9l\u00e9ment retir\u00e9\n    if noeud.d is not None:\n        file.append(noeud.d)\n</code></pre>"},{"location":"Terminale%20NSI/algorithmique/algoArbre/#b-parcours-en-profondeur","title":"b. Parcours en profondeur","text":""},{"location":"Terminale%20NSI/algorithmique/algoArbre/#1prefixe","title":"1.Prefixe","text":"<p>On visite le noeud, on va \u00e0 gauche, on va \u00e0 droite.</p> <p>Parcours profondeur pr\u00e9fixe :1 2 4 5 7 8 3 6 9</p> <pre><code>     def ParcoursPP (arbre):\n        print(arbre.v)\n        ParcoursPP(arbre.g)\n        ParcoursPP(arbre.d)\n</code></pre>"},{"location":"Terminale%20NSI/algorithmique/algoArbre/#2-suffixe","title":"2. Suffixe","text":"<p>On va \u00e0 gauche, on va \u00e0 droite, on visite le noeud.</p> <p>Un parcours suffixe (postfixe) se termine par la racine de l'arbre.</p> <p>Parcours profondeur suffixe:4 7 8 5 2 9 6 3 1</p> <pre><code>    def ParcoursPS (arbre):        \n        ParcoursPS(arbre.g)\n        ParcoursPS(arbre.d)\n        print(arbre.v)\n</code></pre>"},{"location":"Terminale%20NSI/algorithmique/algoArbre/#3-infixe","title":"3. Infixe","text":"<p>On va \u00e0 gauche ,on visite le noeud  , on va \u00e0 droite </p> <p> Un parcours infixe classe les \u00e9l\u00e9ments par ordre croissant dans le cas d'un arbre binaire de recherche.</p> <p>Parcours profondeur infixe : 4 2 7 5 8 1 3 9 6</p> <pre><code>    def ParcoursPI (arbre):        \n        ParcoursPI(arbre.g)\n        print(arbre.v)\n        ParcoursPI(arbre.d)            \n</code></pre>"},{"location":"Terminale%20NSI/algorithmique/algoGraphe/","title":"Algorithmes sur les graphes","text":"<p>On va s'int\u00e9resser aux parcours de graphe. il existe dexu types de parcours principaux : </p> <ul> <li>Le parcours en largeur   ou BFS</li> <li>le parcours en profondeur ou DFS</li> </ul>"},{"location":"Terminale%20NSI/algorithmique/algoGraphe/#1-le-parcours-en-largeur","title":"1. Le parcours en largeur","text":"<p> Le principe</p> <p>On va utilser un structure de file pour stocker nos sommets en cours de visite et une liste pour stocker nos sommets visit\u00e9s</p> <ol> <li>On part d'un sommet, on l'ajoute dans la file .</li> <li>On parcourt les voisins du sommet. S'ils n'ont pas \u00e9t\u00e9 visit\u00e9s, on les ins\u00e8re dans la file puis on d\u00e9file le premier \u00e9l\u00e9ment de la file, on l'ajoute \u00e0 la liste des visit\u00e9s  et on r\u00e9p\u00e8te le point 2 tant que la file n'est pas vide </li> </ol> Exemple <p></p> <p>Le sommet de d\u00e9part est a</p> visit\u00e9s file \u00e9tape [a] b,c Le sommet de d\u00e9part a est marqu\u00e9 visit\u00e9. On enfile ses voisins, ordre al\u00e9atoire [a,b] c,e,d b est visit\u00e9, on ajoute ses voisins \u00e0 la file ...sauf a qui est d\u00e9j\u00e0 visit\u00e9 [a,b,c] e,d, g,f,h c est visit\u00e9, on ajoute ses voisins ...sauf a [a,b,c,e] d,g,f,h e est visit\u00e9 , aucun voisin non visit\u00e9 [a,b,c,e,d] g,f,h,i d est visit\u00e9 , i est ajout\u00e9 \u00e0 la file [a,b,c,e,d,g] f,h,i,k,j g est visit\u00e9, k et j ajout\u00e9 \u00e0 la file [a,b,c,e,d,g,f] h,i,k,j f est visit\u00e9 [a,b,c,e,d,g,f,h] i,k,j h est visit\u00e9 [a,b,c,e,d,g,f],h,i k,j i est visit\u00e9 [a,b,c,e,d,g,f,h,i,k] j,l k est visit\u00e9, l ajout\u00e9 [a,b,c,e,d,g,f,h,i,k,j] l j est visit\u00e9, l ajout\u00e9 [a,b,c,e,d,g,f,h,i,k,j,l] l visit\u00e9, file vide ---&gt; l'algorithme s'arr\u00eate <p>A retenir</p> <p>Lors d'un parcours en largeur , on visite les sommets \u00e0 la distance 1 du sommet de d\u00e9part, puis ceux \u00e0 la distance 2 , etc.. Il ya plusieurs parcours en largeur possible \u00e0 partir d'un sommet.</p> <p>L'algorithme </p> <pre><code>def BFS(graphe,s):\n    \"\"\" Ce programme prend en param\u00e8tre un dictionnaire dont les    \n    cl\u00e9s sont les sommets du graphe et les valeurs \n    une liste des sommets adjacents \u00e0 la cl\u00e9.\n    Renvoie un parcours en largeur du graphe \u00e0 partir du sommet s\n    \"\"\"\n\n    visite =[]\n    file =[s]\n    while file !=[]:\n          a = file.pop(0)\n          visite.append(a)\n          for v in G[a]:\n                 if v not in visite :\n                      file.append(v)\n    return visite\n</code></pre>"},{"location":"Terminale%20NSI/algorithmique/algoGraphe/#2-le-parcours-en-profondeur","title":"2. Le parcours en profondeur","text":"<p> Le principe</p> <p>On va utilser un structure de pile  pour stocker nos sommets en cours de visite et une liste pour stocker nos sommets visit\u00e9s</p> <ol> <li>On part d'un sommet, on l'ajoute dans la pile  . </li> <li>On d\u00e9pile . Si le sommet d\u00e9pil\u00e9 n'est pas visit\u00e9, on l'ajoute \u00e0 visite et on parcourt ses voisins. S'ils n'ont pas \u00e9t\u00e9 visit\u00e9s, on les ins\u00e8re dans la pile et on r\u00e9p\u00e8te le point 2 tant que la pile n'est pas vide </li> </ol> exemp!e <p></p> <p>Le sommet de d\u00e9part est A</p> visit\u00e9s pile \u00e9tape [A] B,C Le sommet de d\u00e9part A est marqu\u00e9 visit\u00e9. On empile ses voisins, ordre al\u00e9atoire [A,C] B,B,E,D C est marqu\u00e9 visit\u00e9. On empile ses voisins [A,C,D] B,B,E,F,G D est marqu\u00e9 visit\u00e9. On empile ses voisins, sauf C d\u00e9j\u00e0 visit\u00e9 [A,C,D, G] B,B,E,F,F G est marqu\u00e9 visit\u00e9.  On ajoute F \u00e0 la pile <p>Il ne reste plus qu'\u00e0 d\u00e9piler  pour obtenir [A,C,D,G,F,E,B]. Lors de la rencontre du second F, on le d\u00e9pile et comme il est visit\u00e9, on ne fera rien. Idem pour le second B. On aurait pu empiler uniquement les \u00e9l\u00e9ments non visit\u00e9s et non d\u00e9j\u00e0 empil\u00e9s .</p> <p>A retenir</p> <p>Lors d'un parcours en profondeur , on visite les sommets branche par branche . On va le plus loin possible en visitant le maximum de sommets.</p> <p>Algorithme</p> <pre><code>def DFS(G,s):\n    visite =[]\n    pile =[s]\n    while pile != []:        \n        a =pile.pop()\n        if a not in visite:\n            visite.append(a)\n            for v in G[a]:\n                if v not in visite:\n                        pile.append(v)\n    return parcours\n</code></pre>"},{"location":"Terminale%20NSI/algorithmique/dichotomie/","title":"La dichotomie","text":""},{"location":"Terminale%20NSI/algorithmique/dichotomie/#la-methode","title":"La m\u00e9thode","text":"<p>Quel est le but de l'algorithme et quels sont les pr\u00e9requis ?</p> <ul> <li>Le principe de l'algorithme est de d\u00e9tecter la  pr\u00e9sence ou non d'un \u00e9l\u00e9ment dans une liste</li> <li>La liste est tri\u00e9e par ordre croissant</li> </ul> <p>La m\u00e9thode </p> <p>Un peu comme au juste prix , on regarde la valeur qui est au milieu de la liste. Si on tombe sur la valeur cherch\u00e9e , c'est gagn\u00e9</p> <p>Si on tombe sur une valeur plus petite que la valeur cherch\u00e9e, comme la liste est tri\u00e9e, on ne garde que les valeurs situ\u00e9es apr\u00e8s le milieu de la liste .</p> <p>Si on tombe sur une valeur plus grande que la valeur cherch\u00e9e, on ne garde que les valeurs situ\u00e9es avant le milieu de la liste .</p> <p> Mais quand s'arr\u00eate-t-on ?</p> <p>On s'arr\u00eate bien sur d\u00e8s que l'on tombe sur la valeur cherch\u00e9e, en renvoyant True ou alors d\u00e8s que la liste sur laquelle on travaille ne contient plus d'\u00e9l\u00e9ment et dans ce cas on renverra  False</p>"},{"location":"Terminale%20NSI/algorithmique/dichotomie/#lalgorithme","title":"L'algorithme","text":"<p>Les variables</p> <ul> <li>debut : indice du d\u00e9but de liste</li> <li>fin : indice de la fin de la liste</li> <li>milieu : indice du milieu de la liste obtenue par le calcul :      (debut+fin)//2</li> </ul> <p>On appelera les param\u00e8tres liste et valeur </p> <p>A chaque \u00e9tape</p> <ul> <li>On calcule la valeur de l'indice du milieu</li> <li> <p>On compare liste[milieu] et valeur . </p> <p>Si valeur est plus petite alors fin prend la valeur milieu -1</p> <p>Si la valeur est plus grande alors debut prend la valeur milieu +1</p> <p>Si la valeur est \u00e9gale , on renvoie True</p> </li> </ul> <p>Stop ?</p> <p>On travaille tant que la valeur n'est pas trouv\u00e9e ou que debut &gt; fin (cas o\u00f9 il n'y a plus d'\u00e9lement dans la liste) </p>"},{"location":"Terminale%20NSI/algorithmique/dichotomie/#les-programmes","title":"Les programmes","text":"<p>Le programme it\u00e9ratif</p> <pre><code>def dichotomie (liste, valeur):\ndebut = 0\nfin  = len(liste)\nif liste ==[]:\n    return False \nwhile debut &lt;= fin:\n    m = (debut+fin)//2\n    if liste[m]&gt; valeur:\n        fin = m-1\n    elif liste[m]&lt;valeur:\n        debut = m+1\n    else :\n        return True\n\nreturn False        \n</code></pre> <p> Le programme r\u00e9cursif</p> <pre><code>def dichotomie_rec (liste, valeur):\n\n    if len(liste)== 0 :\n            return False\n    m = len(liste)//2\n    if liste[m]&gt; valeur:\n        return dichotomie_rec(liste[:m],valeur)\n    elif liste[m] &lt;valeur :\n        return dichotomie_rec(liste[m+1:],valeur)\n    else:\n        return True\n</code></pre> <p>Un peu de maths</p> <p>Combien faut il d'\u00e9tapes pour avoir la r\u00e9ponse \u00e0 notre probl\u00e8me avec l'algorithme de dichotomie ?</p> <p>On cherche p tel que  n &lt; \\(2^{p}\\) .</p> <p>En effet , on divise \u00e0 chaque \u00e9tape la taille de la liste par 2, on compte donc le nombre de fois n\u00e9cessaires pour que la taille de la liste soit nulle .</p> <p>Avec un tout petit peu de maths , on obtient p &gt; \\(\\dfrac{ln(n)}{ln(2)}\\) soit log<sub>2</sub>(n)</p> <p>Exemple : Pour une liste de taille 100, avec un algorithme de recherche dit de force brute, on aurait au pire 100 op\u00e9rations \u00e0 r\u00e9laiser.</p> <p>Avec la m\u00e9thode de la dichotomie, \\(\\dfrac{ln(100)}{ln(2)}\\) = 6.64 \u00e0 0.01 pr\u00e8s soit 7 op\u00e9rations.</p>"},{"location":"Terminale%20NSI/algorithmique/Les%20Tris/tri_insertion/","title":"Tri insertion","text":""},{"location":"Terminale%20NSI/algorithmique/Les%20Tris/tri_insertion/#le-principe","title":"Le principe","text":"<p>Comment \u00e7a marche ?</p> <p>On va s'int\u00e9resser aux caract\u00e9ristiques du tri par insertion :</p> <p>A la premi\u00e8re \u00e9tape , on compare les deux premiers \u00e9lements de la liste et on les trie pasr ordre croissant</p> <p>A la deuxi\u00e8me \u00e9tape , on  compare le troisi\u00e8me \u00e9lement avec le deuxi\u00e8me : </p> <pre><code>    * S'il est plus grand , on ne change rien.\n\n    * S'il est plus petit, on le compare avec le premier.\n\n         * S'il est plus grand que le premier, on l'ins\u00e8re entre le premier et le second \u00e9lement\n         * S'il est plus  petit, on le place au premier rang de la liste.\n</code></pre> <p>....</p> <p>A la i \u00e8me \u00e9tape, avant de d\u00e9buter, les i plus petits \u00e9l\u00e9ments sont class\u00e9es par ordre croissant en t\u00eate de liste. Il nous reste \u00e0 trier les n-i derniers \u00e9l\u00e9ments.</p> <p>Invariant de boucle </p> <p>A la i \u00e8me \u00e9tape, les i premiers \u00e9l\u00e9ments de la liste sont tri\u00e9s par odre croissant au d\u00e9but de la liste .</p> <p>Exemple</p> <p>Soit la liste [5,4,1,0,3] Voici l'\u00e9tat de la liste avant et apr\u00e8s le tour de boucle. </p> \u00e9tape avant le tour  de boucle apr\u00e8s le tour de boucle 1 [5,4,1,0,3] [4,5,1,0,3] 2 [4,5,1,0,3] [1,4,5,0,3] 3 [1,4,5,0,3] [0,1,4,5,3] 4 [0,1,3,5,4] [0,1,3,4,5]"},{"location":"Terminale%20NSI/algorithmique/Les%20Tris/tri_insertion/#2lalgorithme","title":"2.L'algorithme","text":"<p><pre><code>def triInsretion( tab):  # tab=[5,4,1,0,3]\n    n = len(tab)\n    for i in range(1,n):\n        insertion = tab[i]\n        j = i \n        while j &gt;= 0 and insertion &lt;tab[j-1]: \n            tab[j] = tab[j-1]\n            j= j-1\n        tab[j]  = insertion\n\n        print(f\" A la fin de la {i+1} \u00e8me \u00e9tape , la liste est  {tab}\")\n    return tab\n</code></pre>  A la fin de la 1 \u00e8me \u00e9tape , la liste est  [4, 5, 1, 0, 3]</p> <p>A la fin de la 2 \u00e8me \u00e9tape , la liste est  [1, 4, 5, 0, 3]</p> <p>A la fin de la 3 \u00e8me \u00e9tape , la liste est  [0, 1, 4, 5, 3]</p> <p>A la fin de la 4 \u00e8me \u00e9tape , la liste est  [0, 1, 3, 4, 5]</p>"},{"location":"Terminale%20NSI/algorithmique/Les%20Tris/tri_insertion/#3-la-complexite","title":"3. La complexit\u00e9","text":"<p>Etudier la complexit\u00e9 d'un programme , c'est \u00e9tudier son co\u00fbt en termes de ressource. Ce co\u00fbt d\u00e9pend bien sur de la taille de objets \u00e9tudi\u00e9s.  Dans notre cas , on \u00e9tudie le tri d'une liste dont on ne connait pas la taille . On la note n.</p> <p>On parcourt notre liste de l'indice 1 \u00e0 l'indice n-1 (premiere boucle avec i) puis on utilise un while qui dans le pire des cas va boucler 1 puis 2 puis 3 puis , n-1 fois i= 1, on a au pire 1 op\u00e9ration </p> <p>i = 2 on au pire  2 op\u00e9rations   </p> <p>i= n-1 , on a au pire  n-1 op\u00e9ration </p> <p>Soit au total n-1+n-2+n-3+....+4+3+2+1 op\u00e9rations  soit (n-1)(n)/2 op\u00e9rations (formule math\u00e9matiques). </p> <p>On dira que le co\u00fbt est de l'odre de n\u00b2 , not\u00e9 o(n\u00b2)</p> <p>La complexit\u00e9 , ici en n\u00b2, est dite quadratique.</p>"},{"location":"Terminale%20NSI/algorithmique/Les%20Tris/tri_insertion/#a-lepreuve-pratique","title":"A l'\u00e9preuve pratique","text":"SujetCorrection <pre><code>def tri_insertion(tab):\n   '''Trie le tableau tab par ordre croissant\n   en appliquant l'algorithme de tri par insertion'''\n   n = len(tab)\n   for i in range(1, n):\n       valeur_insertion = ... \n       # la variable j sert \u00e0  d\u00e9terminer \n       # o\u00f9 placer la valeur \u00e0  ranger\n       j = ... \n       # tant qu'on n'a pas trouv\u00c3\u00a9 la place de l'\u00e9l\u00e9ment \u00e0 \n       # ins\u00e9rer on d\u00e9cale les valeurs du tableau vers la droite\n       while j &gt; ... and valeur_insertion &lt; tab[...]: \n           tab[j] = tab[j-1]\n           j = ... \n        tab[j] = ... \n</code></pre> <pre><code>def tri_insertion(tab):    \n    n = len(tab)\n    for i in range(1, n):\n        valeur_insertion = tab[i]            \n        j = i-1           \n        while j &gt; 0 and valeur_insertion &lt; tab[j]: \n           tab[j] = tab[j-1]\n           j = j-1 \n        tab[j] = valeur_insertion \n</code></pre>"},{"location":"Terminale%20NSI/algorithmique/Les%20Tris/tri_selection/","title":"Tri selection","text":""},{"location":"Terminale%20NSI/algorithmique/Les%20Tris/tri_selection/#1-le-principe","title":"1. Le principe","text":"<p>Comment \u00e7a marche ?</p> <p>On va s'int\u00e9resser aux caract\u00e9ristiques du tri par s\u00e9lection :</p> <p>A la premi\u00e8re \u00e9tape , on place le plus petit \u00e9l\u00e9ment de la liste en t\u00eate de liste. A la deuxi\u00e8me \u00e9tape , on place le plus petit \u00e9l\u00e9ment de la liste non tri\u00e9e en t\u00eate de liste. Si bien qu'\u00e0 la fin de cette \u00e9tape les deux premiers \u00e9l\u00e9ments de la liste compl\u00e8te sont les deux plus petits, class\u00e9s par ordre croissant ....</p> <p>A la i \u00e8me \u00e9tape , avant de d\u00e9buter, les i-1 plus petits \u00e9l\u00e9ments sont class\u00e9es par ordre croissant en t\u00eate de liste. Il nous reste \u00e0 trier les n-i derniers \u00e9l\u00e9ments.</p> <p>EX  i = 4  l =[0,2,5,9,7,10]. On est au d\u00e9but de la quatri\u00e8me \u00e9tape . Il nous reste \u00e0 classer les 6-4+1=3 derniers \u00e9l\u00e9ments </p> <p>Invariant de boucle </p> <p>A la i \u00e8me \u00e9tape, les i plus petits \u00e9l\u00e9ments de la liste sont tri\u00e9s par odre croissant au d\u00e9but de la liste </p> <p>Exemple</p> <p>Soit la liste [5,4,1,0,3] Voici l'\u00e9tat de la liste avant et apr\u00e8s le tour de boucle. L'algorithme appliqu\u00e9 est celui du Changement de l'indice</p> \u00e9tape avant le tour  de boucle apr\u00e8s le tour de boucle 1 [5,4,1,0,3] [0,4,1,5,3] 2 [0,4,1,5,3] [0,1,4,5,3] 3 [0,1,4,5,3] [0,1,3,5,4] 4 [0,1,3,5,4] [0,1,3,4,5]"},{"location":"Terminale%20NSI/algorithmique/Les%20Tris/tri_selection/#2-deux-algorithmes","title":"2. Deux algorithmes","text":""},{"location":"Terminale%20NSI/algorithmique/Les%20Tris/tri_selection/#changement-de-lindice","title":"Changement de l'indice","text":"<p><pre><code>def triSelection( tab):  # tab=[5,4,1,0,3]\n    n = len(tab)\n    for i in range(n-1):\n        mini = i\n        for j in range(i+1):\n            if tab[j]&lt; tab[mini]:\n                mini =j\n        tab[i],tab[mini] = tab[mini],tab[i]\n        print(f\" A la fin de la {i+1} \u00e8me \u00e9tape , la liste est  {tab}\")\n    return tab\n</code></pre> A la fin de la 1 \u00e8me \u00e9tape , la liste est  [0, 4, 1, 5, 3]</p> <p>A la fin de la 2 \u00e8me \u00e9tape , la liste est  [0, 1, 4, 5, 3]</p> <p>A la fin de la 3 \u00e8me \u00e9tape , la liste est  [0, 1, 3, 5, 4]</p> <p>A la fin de la 4 \u00e8me \u00e9tape , la liste est  [0, 1, 3, 4, 5]</p>"},{"location":"Terminale%20NSI/algorithmique/Les%20Tris/tri_selection/#permutation-des-valeurs","title":"Permutation des valeurs","text":"<p><pre><code>def TriSelection(t):    # tab=[5,4,1,0,3]\n    n = len(t)\n    for i in range (n-1):\n        mini = t[i]\n        for j in range(i+1,n):\n            if mini&gt; t[j]:\n                mini = t[j]\n                t[i], t[j] = t[j],t[i]  \n        print(f\" A la fin de la {i+1} \u00e8me \u00e9tape , la liste est  {tab}\")        \n    return t\n</code></pre>  A la fin de la 1 \u00e8me \u00e9tape , la liste est  [0, 5, 4, 1, 3]</p> <p>A la fin de la 2 \u00e8me \u00e9tape , la liste est  [0, 1, 5, 4, 3]</p> <p>A la fin de la 3 \u00e8me \u00e9tape , la liste est  [0, 1, 3, 5, 4]</p> <p>A la fin de la 4 \u00e8me \u00e9tape , la liste est  [0, 1, 3, 4, 5]</p>"},{"location":"Terminale%20NSI/algorithmique/Les%20Tris/tri_selection/#3-la-complexite","title":"3. La complexit\u00e9","text":"<p>Etudier la complexit\u00e9 d'un programme , c'est \u00e9tudier son co\u00fbt en termes de ressource. Ce co\u00fbt d\u00e9pend bien sur de la taille de objets \u00e9tudi\u00e9s.  Dans notre cas , on \u00e9tudie le tri d'une liste dont on ne connait pas la, taille . On la note n.</p> <p>On parcourt notre liste de l'indice 0 \u00e0 l'indice n-2 (premiere boucle avec i) puis on parcourt cette lsite de l'indice i+1 \u00e0 la fin de la liste .</p> <p>i= 0, on a n-1 op\u00e9rations (j varie de 1 \u00e0 n-1)</p> <p>i = 1 on a n-2 op\u00e9rations   (j varie de 2 \u00e0 n-1)</p> <p>i= n-2 , on a une op\u00e9ration (j =n-1)</p> <p>Soit au total n-1+n-2+n-3+....+4+3+2+1 op\u00e9rations soit (n-1)(n)/2 op\u00e9rations (formule math\u00e9matiques). </p> <p>On dira que le co\u00fbt est de l'odre de n\u00b2 , not\u00e9 o(n\u00b2)</p> <p>La complexit\u00e9 , ici en n\u00b2, est dite quadratique.</p>"},{"location":"Terminale%20NSI/sda/files/","title":"Les Files en Terminale NSI","text":"<p>Une file (ou queue en anglais) est une structure de donn\u00e9es lin\u00e9aire qui fonctionne selon le principe FIFO (First In, First Out), c'est-\u00e0-dire que le premier \u00e9l\u00e9ment ajout\u00e9 sera le premier \u00e0 sortir.</p>"},{"location":"Terminale%20NSI/sda/files/#principe-dune-file","title":"Principe d'une file","text":"<ul> <li>Enfiler (enqueue) : ajouter un \u00e9l\u00e9ment \u00e0 la fin de la file.</li> <li>D\u00e9filer (dequeue) : retirer l'\u00e9l\u00e9ment en t\u00eate de la file.</li> </ul>"},{"location":"Terminale%20NSI/sda/files/#implementation-dune-file-avec-une-liste-python","title":"Impl\u00e9mentation d'une file avec une liste Python","text":"<p>On part d'une liste vide pour stocker les \u00e9l\u00e9ments de la file.</p> <pre><code>class File:\n    def __init__(self):\n        self.elements = []\n\n    def est_vide(self):\n        return self.elements == []\n\n    def enfiler(self, element):\n        self.elements.append(element)\n\n    def defiler(self):\n        if self.est_vide():\n            raise IndexError(\"La file est vide\")\n        return self.elements.pop(0)\n\n    def tete(self):\n        if self.est_vide():\n            raise IndexError(\"La file est vide\")\n        return self.elements[0]\n\n    def __str__(self):\n        return str(self.elements)\n</code></pre>"},{"location":"Terminale%20NSI/sda/files/#exemple-dutilisation","title":"Exemple d'utilisation","text":"<pre><code>f = File()\nf.enfiler(10)\nf.enfiler(20)\nprint(f)         # [10, 20]\nprint(f.defiler()) # 10\nprint(f)         # [20]\n</code></pre>"},{"location":"Terminale%20NSI/sda/files/#point-important","title":"Point important","text":"<ul> <li>L'op\u00e9ration <code>defiler</code> est co\u00fbteuse avec une liste Python car elle n\u00e9cessite de d\u00e9caler tous les \u00e9l\u00e9ments.</li> </ul>"},{"location":"Terminale%20NSI/sda/piles/","title":"Les piles","text":""},{"location":"Terminale%20NSI/sda/piles/#definition","title":"D\u00e9finition","text":"<p>Une pile est une structure de donn\u00e9es qui fonctionne selon le principe LIFO (Last In, First Out), c'est-\u00e0-dire que le dernier \u00e9l\u00e9ment ajout\u00e9 est le premier \u00e0 \u00eatre retir\u00e9.</p>"},{"location":"Terminale%20NSI/sda/piles/#operations-principales","title":"Op\u00e9rations principales","text":"<ul> <li>empiler (push) : ajouter un \u00e9l\u00e9ment au sommet de la pile.</li> <li>d\u00e9piler (pop) : retirer l\u2019\u00e9l\u00e9ment au sommet de la pile.</li> <li>sommet (top/peek) : acc\u00e9der \u00e0 l\u2019\u00e9l\u00e9ment au sommet sans le retirer.</li> <li>est_vide (is_empty) : v\u00e9rifier si la pile est vide.</li> </ul> <p>On impl\u00e9mente la pile \u00e0 l'aide d'une liste vide</p>"},{"location":"Terminale%20NSI/sda/piles/#exemple-de-codage-en-python","title":"Exemple de codage en Python","text":"<pre><code>class Pile:\n    def __init__(self):\n        self.elements = []\n\n    def est_vide(self):\n        return len(self.elements) == 0\n\n    def empiler(self, element):\n        self.elements.append(element)\n\n    def depiler(self):\n        if self.est_vide():\n            raise IndexError(\"La pile est vide\")\n        return self.elements.pop()\n\n    def sommet(self):\n        if self.est_vide():\n            raise IndexError(\"La pile est vide\")\n        return self.elements[-1]\n</code></pre>"},{"location":"Terminale%20NSI/sda/piles/#exemple-dutilisation","title":"Exemple d'utilisation","text":"<pre><code>p = Pile()\np.empiler(5)\np.empiler(10)\nprint(p.sommet())  # Affiche 10\nprint(p.depiler()) # Affiche 10\nprint(p.depiler()) # Affiche 5\nprint(p.est_vide()) # Affiche True\n</code></pre>"},{"location":"Terminale%20NSI/sda/piles/#applications-des-piles","title":"Applications des piles","text":"<ul> <li>Annulation/r\u00e9tablissement dans les \u00e9diteurs de texte</li> <li>\u00c9valuation d'expressions arithm\u00e9tiques</li> <li>Parcours en profondeur (DFS) dans les graphes</li> </ul>"}]}